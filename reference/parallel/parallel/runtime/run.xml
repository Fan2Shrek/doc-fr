<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 41445b3d771660805270f52adf0e421aa20f12ab Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="parallel-runtime.run" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>parallel\Runtime::run</refname>
  <refpurpose>Exécution</refpurpose>
 </refnamediv>

 <refsect1 role="description" audience="execute">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type class="union"><type>Future</type><type>null</type></type><methodname>parallel\Runtime::run</methodname>
   <methodparam><type>Closure</type><parameter>task</parameter></methodparam>
  </methodsynopsis>
  <para>
   Planifie <parameter>task</parameter> pour l'exécution en parallèle.
  </para>
  <methodsynopsis>
   <modifier>public</modifier> <type class="union"><type>Future</type><type>null</type></type><methodname>parallel\Runtime::run</methodname>
   <methodparam><type>Closure</type><parameter>task</parameter></methodparam>
   <methodparam><type>array</type><parameter>argv</parameter></methodparam>
  </methodsynopsis>
  <para>
   Planifie <parameter>task</parameter> pour l'exécution en parallèle, en passant <parameter>argv</parameter> au moment de l'exécution.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>task</parameter></term>
    <listitem>
     <para>
      Une <classname>Closure</classname> avec des caractéristiques spécifiques.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>argv</parameter></term>
    <listitem>
     <para>
      Un <type>array</type> d'arguments avec des caractéristiques spécifiques à passer à <parameter>task</parameter> au moment de l'exécution.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="closure-characteristics">
 <title>Task Characteristics</title>
 <para>
  Les fermetures planifiées pour l'exécution en parallèle ne doivent pas :
  <simplelist>
   <member>accepté ou retourné par référence</member>
   <member>accepté ou retourné des objets internes (voir notes)</member>
   <member>exécuter un ensemble limité d'instructions</member>
  </simplelist>
 </para>
 <para>
  Les instructions interdites dans les fermetures destinées à l'exécution en parallèle sont :
  <simplelist>
   <member>yield</member>
   <member>utiliser by-reference</member>
   <member>déclarer des classes</member>
   <member>déclarer des fonctions nommées</member>
  </simplelist>
 </para>
 <note>
  <para>
   Les fermetures imbriquées peuvent yield ou utiliser by-reference, mais ne doivent pas contenir de déclarations de classes ou de fonctions nommées.
  </para>
 </note>
 <note>
  <para>
   Aucune instruction n'est interdite dans les fichiers que la tâche peut inclure.
  </para>
 </note>
 </refsect1>

 <refsect1 role="argv-characteristics">
 <title>Caractéristiques des arguments</title>
 <para>
  Les arguments ne doivent pas:
  <simplelist>
   <member>contenir des références</member>
   <member>contenir des ressources</member>
   <member>contenir des objets internes (voir notes)</member>
  </simplelist>
  <note>
   <para>
    Dans le cas des ressources de flux de fichiers, la ressource sera convertie en descripteur de fichier et passée en <type>int</type> si possible, ceci n'est pas supporté sur Windows.
   </para>
  </note>
 </para>
 </refsect1>

 <refsect1 role="object-characteristics">
  <title>Notes sur les objets internes</title>
  <para>
   Les objets internes utilisent généralement une structure personnalisée qui ne peut pas être copiée en toute sécurité par valeur, PHP manque actuellement des mécanismes pour le faire (sans sérialisation)
   et donc seuls les objets qui n'utilisent pas une structure personnalisée peuvent être partagés.
  </para>
  <para>
   Certains objets internes n'utilisent pas de structure personnalisée, par exemple <classname>parallel\Events\Event</classname> et peuvent donc être partagés.
  </para>
  <para>
   Les fermetures sont un type spécial d'objet interne et supportent d'être copiées par valeur, et peuvent donc être partagées.
  </para>
  <para>
   Les canaux sont centraux pour l'écriture de code parallèle et supportent l'accès et l'exécution concurrents par nécessité, et peuvent donc être partagés.
  </para>
  <warning>
   <para>
    Une classe utilisateur qui étend une classe interne peut utiliser une structure personnalisée telle que définie par la classe interne, auquel cas elle ne peut pas être copiée en toute sécurité par valeur,
    et ne peut donc pas être partagée.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <warning>
   <para>
    La <type>Future</type> retournée ne doit pas être ignorée lorsque la tâche contient une déclaration de retour ou de lancer.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="exceptions">
  <title>Exceptions</title>
  <warning>
   <para>
    Lance une <type>parallel\Runtime\Error\Closed</type> si <type>parallel\Runtime</type> était fermé.
   </para>
  </warning>
  <warning>
   <para>
    Lance une <type>parallel\Runtime\Error\IllegalFunction</type> si <parameter>task</parameter> est une fermeture créée à partir d'une fonction interne.
   </para>
  </warning>
  <warning>
   <para>
    Lance une <type>parallel\Runtime\Error\IllegalInstruction</type> si <parameter>task</parameter> contient des instructions illégales.
   </para>
  </warning>
  <warning>
   <para>
    Lance une <type>parallel\Runtime\Error\IllegalParameter</type> si <parameter>task</parameter> accepte ou <parameter>argv</parameter> contient des variables illégales.
   </para>
  </warning>
  <warning>
   <para>
    Lance une <type>parallel\Runtime\Error\IllegalReturn</type> si <parameter>task</parameter> retourne illégalement.
   </para>
  </warning>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
