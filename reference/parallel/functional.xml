<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d9ecfba6ad07e4e0b1b13ed1f0592f09d2e2f5c9 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<reference xml:id="functional.parallel" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Functional API</title>
 <partintro>
  <para>
   L'API <classname>parallel\Runtime</classname> fournit un grand degré de contrôle au développeur PHP expérimenté, et à ceux qui sont intimement familiers avec l'écriture d'applications qui utilisent
   la concurrence parallèle.
  </para>
  <para>
   L'API fonctionnelle fournit moins de contrôle en échange de la capacité de prendre des décisions pour le développeur:
   <itemizedlist>
    <listitem>
    <para>tous les runtimes en cours d'exécution sont amorcés de manière identique</para>
    </listitem>
    <listitem>
    <para>l'ordonnancement est déterminé par l'API, et non par le développeur</para>
    </listitem>
   </itemizedlist>
   <function>parallel\run</function> fournit la garantie que la tâche commencera à s'exécuter en parallèle dès que les contraintes matérielles et du système d'exploitation le permettront, sans
   créer inutilement des espaces d'exécutions. Pour la plupart des applications, l'API fonctionnelle devrait être préférée.
  </para>
 </partintro>

 &reference.parallel.functions.parallel.bootstrap;
 &reference.parallel.functions.parallel.run;
</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
