<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 99a05eca30d4789366893e5fd902c6c17d10fba1 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="worker.collect" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Worker::collect</refname>
  <refpurpose>Collecte les références des tâches terminées</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>int</type><methodname>Worker::collect</methodname>
   <methodparam choice="opt"><type>Callable</type><parameter>collector</parameter></methodparam>
  </methodsynopsis>
  <para>
   Permet au worker de collecter les références déterminées comme étant
   des miettes par le collector éventuellement donné.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>collector</parameter></term>
    <listitem>
     <para>
      Une fonction de rappel qui retourne un booléen sur la possibilité de
      collecter la tâche ou non. Seuls dans des cas rares un collecteur
      personnalisé devrait être utilisé.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Le nombre de tâches restantes sur la pile du worker à collecter.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un exemple basique de <methodname>Worker::collect</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php
$worker = new Worker();

echo "There are currently {$worker->collect()} tasks on the stack to be collected\n";

for ($i = 0; $i < 15; ++$i) {
    $worker->stack(new class extends Threaded {});
}

echo "There are {$worker->collect()} tasks remaining on the stack to be collected\n";

$worker->start();

while ($worker->collect()); // bloque jusqu'à ce que toutes les tâches soient terminées

echo "There are now {$worker->collect()} tasks on the stack to be collected\n";

$worker->shutdown();
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
There are currently 0 tasks on the stack to be collected
There are 15 tasks remaining on the stack to be collected
There are now 0 tasks on the stack to be collected
]]>
    </screen>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
