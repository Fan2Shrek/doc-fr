<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 855bfee2f3db70d7dbb4c60c7c4a4efa567f1c60 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="sqlite3.backup" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SQLite3::backup</refname>
  <refpurpose>Sauvegarde une base de données dans une autre base de données</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="SQLite3">
   <modifier>public</modifier> <type>bool</type><methodname>SQLite3::backup</methodname>
   <methodparam><type>SQLite3</type><parameter>destination</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>sourceDatabase</parameter><initializer>"main"</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>destinationDatabase</parameter><initializer>"main"</initializer></methodparam>
  </methodsynopsis>
  <para>
   <methodname>SQLite3::backup</methodname> copie le contenu d'une base de données
   dans une autre, écrasant le contenu de la base de données de destination.
   Cela est utile pour créer des sauvegardes de bases de données
   ou pour copier des bases de données en mémoire vers ou depuis des fichiers persistants.
  </para>
  <tip>
   <para>
    Depuis SQLite 3.27.0 (2019-02-07), il est également possible d'utiliser l'instruction
    <literal>VACUUM INTO 'file.db';</literal> pour sauvegarder la base de données dans un nouveau fichier.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>destination</parameter></term>
    <listitem>
     <para>
      Une connexion à une base de données SQLite3 ouverte avec <methodname>SQLite3::open</methodname>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>sourceDatabase</parameter></term>
    <listitem>
     <para>
      Le nom de la base de données est <literal>"main"</literal> pour la base de données principale,
      <literal>"temp"</literal> pour la base de données temporaire,
      ou le nom spécifié après le mot-clé <literal>AS</literal>
      dans une instruction <literal>ATTACH</literal> pour une base de données attachée.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>destinationDatabase</parameter></term>
    <listitem>
     <para>
      Analogue à <parameter>sourceDatabase</parameter>
      mais pour la <parameter>destination</parameter>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="sqlite3.backup.example.basic">
   <title>Sauvegarder une base de données existante</title>
   <programlisting role="php">
<![CDATA[
<?php
// $conn est une connexion à une base de données sqlite3 déjà ouverte

$backup = new SQLite3('backup.sqlite');
$conn->backup($backup);
?>
]]>
   </programlisting>
  </example>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
