<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1976eae0d815797af97a1e16c5cd90ffc2868395 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="intlchar.getpropertyvalueenum" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>IntlChar::getPropertyValueEnum</refname>
  <refpurpose>Renvoie la valeur de propriété pour un nom de valeur donné</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="IntlChar">
   <modifier>public</modifier> <modifier>static</modifier> <type>int</type><methodname>IntlChar::getPropertyValueEnum</methodname>
   <methodparam><type>int</type><parameter>property</parameter></methodparam>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
  </methodsynopsis>
  <para>
   Renvoie la valeur de propriété entière pour un nom de valeur donné, tel que spécifié dans le fichier de base de données Unicode PropertyValueAliases.txt.
   Les variantes courtes, longues et autres sont reconnues.
  </para>
  <note>
   <para>
    Quelques noms dans PropertyValueAliases.txt ne seront reconnus qu'avec
    <constant>IntlChar::PROPERTY_GENERAL_CATEGORY_MASK</constant>, pas
    <constant>IntlChar::PROPERTY_GENERAL_CATEGORY</constant>.
    Ceux-ci incluent :
    <simplelist>
     <member>"C" / "Autre"</member>
     <member>"L" / "Lettre"</member>
     <member>"LC" / "Lettre_Majuscule"</member>
     <member>"M" / "Marque"</member>
     <member>"N" / "Nombre"</member>
     <member>"P" / "Ponctuation"</member>
     <member>"S" / "Symbole"</member>
     <member> "Z" / "Séparateur"</member>
    </simplelist>
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>property</parameter></term>
    <listitem>
     &intl.property.parameter;
     <para>
      Si hors de portée, ou si cette méthode ne fonctionne pas avec la valeur donnée,
      <constant>IntlChar::PROPERTY_INVALID_CODE</constant> est retourné.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>name</parameter></term>
    <listitem>
     <para>
      La valeur de nom à rechercher. Le nom est comparé en utilisant une "correspondance lâche" comme décrit dans PropertyValueAliases.txt.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Renvoie la valeur entière correspondante, ou <constant>IntlChar::PROPERTY_INVALID_CODE</constant> si le nom donné
   ne correspond à aucune valeur de la propriété donnée, ou si la propriété est invalide.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&intl.property.example;</title>
   <programlisting role="php">
    <![CDATA[
<?php
var_dump(IntlChar::getPropertyValueEnum(IntlChar::PROPERTY_BLOCK, 'greek') === IntlChar::BLOCK_CODE_GREEK);
var_dump(IntlChar::getPropertyValueEnum(IntlChar::PROPERTY_BIDI_CLASS, 'RIGHT_TO_LEFT') === IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT);
var_dump(IntlChar::getPropertyValueEnum(IntlChar::PROPERTY_BIDI_CLASS, 'some made-up string') === IntlChar::PROPERTY_INVALID_CODE);
var_dump(IntlChar::getPropertyValueEnum(123456789, 'RIGHT_TO_LEFT') === IntlChar::PROPERTY_INVALID_CODE);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
    <![CDATA[
bool(true)
bool(true)
bool(true)
bool(true)
]]>
   </screen>
  </example>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
