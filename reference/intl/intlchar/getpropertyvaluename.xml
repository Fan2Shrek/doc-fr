<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1976eae0d815797af97a1e16c5cd90ffc2868395 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="intlchar.getpropertyvaluename" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>IntlChar::getPropertyValueName</refname>
  <refpurpose>Renvoie le nom Unicode pour une valeur de propriété</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="IntlChar">
   <modifier>public</modifier> <modifier>static</modifier> <type class="union"><type>string</type><type>false</type></type><methodname>IntlChar::getPropertyValueName</methodname>
   <methodparam><type>int</type><parameter>property</parameter></methodparam>
   <methodparam><type>int</type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>type</parameter><initializer>IntlChar::LONG_PROPERTY_NAME</initializer></methodparam>
  </methodsynopsis>
  <para>
   Renvoie le nom Unicode pour une valeur de propriété donnée, tel que donné dans le fichier de base de données Unicode PropertyValueAliases.txt.
  </para>
  <note>
   <para>
    Quelques noms dans PropertyValueAliases.txt ne peuvent être récupérés qu'en utilisant
    <constant>IntlChar::PROPERTY_GENERAL_CATEGORY_MASK</constant>, pas
    <constant>IntlChar::PROPERTY_GENERAL_CATEGORY</constant>.
    Ceux-ci incluent :
    <simplelist>
     <member>"C" / "Autre"</member>
     <member>"L" / "Lettre"</member>
     <member>"LC" / "Lettre_Majuscule"</member>
     <member>"M" / "Marque"</member>
     <member>"N" / "Nombre"</member>
     <member>"P" / "Ponctuation"</member>
     <member>"S" / "Symbole"</member>
     <member> "Z" / "Séparateur"</member>
    </simplelist>
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>property</parameter></term>
    <listitem>
     &intl.property.parameter;
     <para>
      Si hors de portée, ou si cette méthode ne fonctionne pas avec la valeur donnée, &false; est retourné.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>value</parameter></term>
    <listitem>
     <para>
      Le sélecteur pour une valeur pour la propriété donnée. Si hors de portée, &false; est retourné.
     </para>
     <para>
      En général, les valeurs valides vont de <literal>0</literal> jusqu'à un maximum. Il y a quelques exceptions :
      <simplelist>
       <member>
        <constant>IntlChar::PROPERTY_BLOCK</constant> les valeurs commencent à la valeur non-nulle <constant>IntlChar::BLOCK_CODE_BASIC_LATIN</constant>
       </member>
       <member>
        <constant>IntlChar::PROPERTY_CANONICAL_COMBINING_CLASS</constant> les valeurs ne sont pas contiguës et vont de 0 à 240.
       </member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>type</parameter></term>
    <listitem>
     <para>
      Le sélecteur pour le nom à obtenir. Si hors de portée, &false; est retourné.
     </para>
     <para>
      Toutes les valeurs ont un nom long. La plupart ont un nom court, mais certaines n'en ont pas. Unicode permet des noms
      supplémentaires; s'ils sont présents, ils seront retournés en ajoutant 1, 2, etc. à <constant>IntlChar::LONG_PROPERTY_NAME</constant>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Renvoie le nom, ou &false; si soit <parameter>property</parameter> soit <parameter>type</parameter>
   est hors de portée. Renvoie &null; en cas d'échec.
  </para>
  <para>
   Si un <parameter>type</parameter> donné retourne &false;, alors tous les valeurs plus grandes de
   <parameter>type</parameter> retourneront &false;, avec une exception : si &false; est retourné pour
   <constant>IntlChar::SHORT_PROPERTY_NAME</constant>, alors <constant>IntlChar::LONG_PROPERTY_NAME</constant>
   (et plus) peut encore retourner une valeur non-&false;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&intl.property.example;</title>
   <programlisting role="php">
    <![CDATA[
<?php
var_dump(IntlChar::getPropertyValueName(IntlChar::PROPERTY_BLOCK, IntlChar::BLOCK_CODE_GREEK));
var_dump(IntlChar::getPropertyValueName(IntlChar::PROPERTY_BLOCK, IntlChar::BLOCK_CODE_GREEK, IntlChar::SHORT_PROPERTY_NAME));
var_dump(IntlChar::getPropertyValueName(IntlChar::PROPERTY_BLOCK, IntlChar::BLOCK_CODE_GREEK, IntlChar::LONG_PROPERTY_NAME));
var_dump(IntlChar::getPropertyValueName(IntlChar::PROPERTY_BLOCK, IntlChar::BLOCK_CODE_GREEK, IntlChar::LONG_PROPERTY_NAME + 1));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
    <![CDATA[
string(16) "Greek_And_Coptic"
string(5) "Greek"
string(16) "Greek_And_Coptic"
bool(false)
]]>
   </screen>
  </example>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
