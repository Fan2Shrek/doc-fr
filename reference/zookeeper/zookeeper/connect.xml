<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 299d1daf07b166ec08d7f395e2d1a145a59751d9 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="zookeeper.connect" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Zookeeper::connect</refname>
  <refpurpose>Créer une connexion pour communiquer avec Zookeeper</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="oop">
   <modifier>public</modifier>
   <type>void</type><methodname>Zookeeper::connect</methodname>
   <methodparam><type>string</type><parameter>host</parameter></methodparam>
   <methodparam choice="opt"><type>callable</type><parameter>watcher_cb</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>recv_timeout</parameter><initializer>10000</initializer></methodparam>
  </methodsynopsis>

  <para>
   Cette méthode crée une nouvelle connexion et une session zookeeper qui correspond à cette connexion. L'établissement de session est asynchrone, ce qui signifie que la session ne doit pas être considérée comme établie jusqu'à ce qu'un événement d'état ZOO_CONNECTED_STATE soit reçu.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>host</parameter></term>
    <listitem>
     <para>
      Séparés par des virgules, chaque paire hôte:port correspondant à un serveur zk. Par exemple, "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002"
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>watcher_cb</parameter></term>
    <listitem>
     <para>
      La fonction de rappel globale d'observation. Lorsque des notifications sont déclenchées, cette fonction sera invoquée.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>recv_timeout</parameter></term>
    <listitem>
     <para>
      Le délai d'attente pour cette session, uniquement valide si la connexion est actuellement connectée (c'est-à-dire que le dernier état de l'observateur est ZOO_CONNECTED_STATE).
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Cette méthode émet une erreur/warning PHP lorsque le nombre de paramètres ou les types sont incorrects ou que l'instance n'a pas pu être initialisée.
  </para>
  <caution>
    <para>
      Depuis la version 0.3.0, cette méthode émet <classname>ZookeeperException</classname> et ses dérivés.
    </para>
  </caution>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>Zookeeper::__construct</methodname></member>
   <member><classname>ZookeeperException</classname></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
