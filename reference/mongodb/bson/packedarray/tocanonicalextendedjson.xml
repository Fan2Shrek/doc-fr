<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 3c84b0297195da8c0c2dad2d33f2c143dd3421b0 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="mongodb-bson-packedarray.tocanonicalextendedjson" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoDB\BSON\PackedArray::toCanonicalExtendedJSON</refname>
  <refpurpose>Renvoie la représentation JSON étendue canonique du tableau BSON</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>final</modifier> <modifier>public</modifier> <type>string</type><methodname>MongoDB\BSON\PackedArray::toCanonicalExtendedJSON</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Convertit le tableau BSON en sa représentation
   <link xlink:href="&url.mongodb.specs.extendedjson;#canonical-extended-json-example">JSON étendue canonique</link>.
   Le format canonique privilégie la fidélité des types au détriment de la
   concision de la sortie et est le plus adapté pour produire une sortie qui
   peut être convertie en BSON sans perte d'informations de type (par exemple,
   les types numériques resteront différenciés).
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Renvoie une chaîne contenant la représentation
   <link xlink:href="&url.mongodb.specs.extendedjson;#canonical-extended-json-example">JSON étendue canonique</link>
   du tableau BSON.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple de <methodname>MongoDB\BSON\PackedArray::toCanonicalExtendedJSON</methodname></title>
   <programlisting role="php">
    <![CDATA[
<?php

$array = [
    'foo',
    123,
    4294967295,
    new MongoDB\BSON\ObjectId('56315a7c6118fd1b920270b1'),
];

$packedArray = MongoDB\BSON\PackedArray::fromPHP($array);
echo $packedArray->toCanonicalExtendedJSON(), "\n";

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
    <![CDATA[
[ "foo", { "$numberInt" : "123" }, { "$numberLong" : "4294967295" }, { "$oid" : "56315a7c6118fd1b920270b1" } ]
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>MongoDB\BSON\PackedArray::fromJSON</methodname></member>
   <member><methodname>MongoDB\BSON\PackedArray::toRelaxedExtendedJSON</methodname></member>
   <member><function>MongoDB\BSON\toCanonicalExtendedJSON</function></member>
   <member><link xlink:href="&url.mongodb.specs.extendedjson;">Spécification du JSON étendu</link></member>
   <member><link xlink:href="&url.mongodb.docs.bson;">Types BSON</link></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
