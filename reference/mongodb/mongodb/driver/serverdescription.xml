<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d17b7b4947e7819ff5036715dd706be87ae4def Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<reference xml:id="class.mongodb-driver-serverdescription" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>La classe MongoDB\Driver\ServerDescription</title>
 <titleabbrev>MongoDB\Driver\ServerDescription</titleabbrev>

 <partintro>

<!-- {{{ MongoDB\Driver\ServerDescription intro -->
  <section xml:id="mongodb-driver-serverdescription.intro">
   &reftitle.intro;
   <para>
    La classe <classname>MongoDB\Driver\ServerDescription</classname> est un objet de valeur
    qui représente un serveur auquel le pilote est connecté. Les instances
    de cette classe sont retournées par les méthodes
    <function>MongoDB\Driver\Server::getServerDescription</function> et
    <classname>MongoDB\Driver\Monitoring\ServerChangedEvent</classname>.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="mongodb-driver-serverdescription.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoDB\Driver\ServerDescription</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <modifier>final</modifier>
     <ooclass>
      <classname>MongoDB\Driver\ServerDescription</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>string</type>
     <varname linkend="mongodb-driver-serverdescription.constants.type-unknown">MongoDB\Driver\ServerDescription::TYPE_UNKNOWN</varname>
     <initializer>"Unknown"</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>string</type>
     <varname linkend="mongodb-driver-serverdescription.constants.type-standalone">MongoDB\Driver\ServerDescription::TYPE_STANDALONE</varname>
     <initializer>"Standalone"</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>string</type>
     <varname linkend="mongodb-driver-serverdescription.constants.type-mongos">MongoDB\Driver\ServerDescription::TYPE_MONGOS</varname>
     <initializer>"Mongos"</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>string</type>
     <varname linkend="mongodb-driver-serverdescription.constants.type-possible-primary">MongoDB\Driver\ServerDescription::TYPE_POSSIBLE_PRIMARY</varname>
     <initializer>"PossiblePrimary"</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>string</type>
     <varname linkend="mongodb-driver-serverdescription.constants.type-rs-primary">MongoDB\Driver\ServerDescription::TYPE_RS_PRIMARY</varname>
     <initializer>"RSPrimary"</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>string</type>
     <varname linkend="mongodb-driver-serverdescription.constants.type-rs-secondary">MongoDB\Driver\ServerDescription::TYPE_RS_SECONDARY</varname>
     <initializer>"RSSecondary"</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>string</type>
     <varname linkend="mongodb-driver-serverdescription.constants.type-rs-arbiter">MongoDB\Driver\ServerDescription::TYPE_RS_ARBITER</varname>
     <initializer>"RSArbiter"</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>string</type>
     <varname linkend="mongodb-driver-serverdescription.constants.type-rs-other">MongoDB\Driver\ServerDescription::TYPE_RS_OTHER</varname>
     <initializer>"RSOther"</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>string</type>
     <varname linkend="mongodb-driver-serverdescription.constants.type-rs-ghost">MongoDB\Driver\ServerDescription::TYPE_RS_GHOST</varname>
     <initializer>"RSGhost"</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>string</type>
     <varname linkend="mongodb-driver-serverdescription.constants.type-load-balancer">MongoDB\Driver\ServerDescription::TYPE_LOAD_BALANCER</varname>
     <initializer>"LoadBalancer"</initializer>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.mongodb-driver-serverdescription')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])" />
   </classsynopsis>
<!-- }}} -->

  </section>

<!-- {{{ MongoDB\Driver\ServerDescription constants -->
  <section xml:id="mongodb-driver-serverdescription.constants">
   &reftitle.constants;
   <variablelist>

    <varlistentry xml:id="mongodb-driver-serverdescription.constants.type-unknown">
     <term><constant>MongoDB\Driver\ServerDescription::TYPE_UNKNOWN</constant></term>
     <listitem>
      <para>Le type de serveur inconnu, retourné par <methodname>MongoDB\Driver\ServerDescription::getType</methodname>.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="mongodb-driver-serverdescription.constants.type-standalone">
     <term><constant>MongoDB\Driver\ServerDescription::TYPE_STANDALONE</constant></term>
     <listitem>
      <para>Le type de serveur autonome, retourné par <methodname>MongoDB\Driver\ServerDescription::getType</methodname>.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="mongodb-driver-serverdescription.constants.type-mongos">
     <term><constant>MongoDB\Driver\ServerDescription::TYPE_MONGOS</constant></term>
     <listitem>
      <para>Le type de serveur Mongos, retourné par <methodname>MongoDB\Driver\ServerDescription::getType</methodname>.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="mongodb-driver-serverdescription.constants.type-possible-primary">
     <term><constant>MongoDB\Driver\ServerDescription::TYPE_POSSIBLE_PRIMARY</constant></term>
     <listitem>
      <para>Le type de serveur primaire possible d'un ensemble de réplicas, retourné par <methodname>MongoDB\Driver\ServerDescription::getType</methodname>.</para>
      <para>Un serveur peut être identifié comme un primaire possible s'il n'a pas encore été vérifié mais qu'un autre serveur de la réplique pense qu'il est le primaire.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="mongodb-driver-serverdescription.constants.type-rs-primary">
     <term><constant>MongoDB\Driver\ServerDescription::TYPE_RS_PRIMARY</constant></term>
     <listitem>
      <para>Le type de serveur primaire d'un ensemble de réplicas, retourné par <methodname>MongoDB\Driver\ServerDescription::getType</methodname>.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="mongodb-driver-serverdescription.constants.type-rs-secondary">
     <term><constant>MongoDB\Driver\ServerDescription::TYPE_RS_SECONDARY</constant></term>
     <listitem>
      <para>Le type de serveur secondaire d'un ensemble de réplicas, retourné par <methodname>MongoDB\Driver\ServerDescription::getType</methodname>.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="mongodb-driver-serverdescription.constants.type-rs-arbiter">
     <term><constant>MongoDB\Driver\ServerDescription::TYPE_RS_ARBITER</constant></term>
     <listitem>
      <para>Le type de serveur arbitre d'un ensemble de réplicas, retourné par <methodname>MongoDB\Driver\ServerDescription::getType</methodname>.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="mongodb-driver-serverdescription.constants.type-rs-other">
     <term><constant>MongoDB\Driver\ServerDescription::TYPE_RS_OTHER</constant></term>
     <listitem>
      <para>Le type de serveur d'un ensemble de réplicas autre que primaire, secondaire ou arbitre, retourné par <methodname>MongoDB\Driver\ServerDescription::getType</methodname>.</para>
      <para>Ces serveurs peuvent être cachés, démarrer ou récupérer. Ils ne peuvent pas être interrogés, mais leurs listes d'hôtes sont utiles pour découvrir la configuration actuelle de l'ensemble de réplicas.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="mongodb-driver-serverdescription.constants.type-rs-ghost">
     <term><constant>MongoDB\Driver\ServerDescription::TYPE_RS_GHOST</constant></term>
     <listitem>
      <para>Le type de serveur fantôme d'un ensemble de réplicas, retourné par <methodname>MongoDB\Driver\ServerDescription::getType</methodname>.</para>
      <para>Les serveurs peuvent être identifiés comme tels dans au moins trois situations : brièvement pendant le démarrage du serveur ; dans un ensemble de réplicas non initialisé ; ou lorsque le serveur est écarté (c'est-à-dire retiré de la configuration de l'ensemble de réplicas). Ils ne peuvent pas être interrogés, ni leur liste d'hôtes utilisée pour découvrir la configuration actuelle de l'ensemble de réplicas ; cependant, le client peut surveiller ce serveur dans l'espoir qu'il passe à un état plus utile.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="mongodb-driver-serverdescription.constants.type-load-balancer">
     <term><constant>MongoDB\Driver\ServerDescription::TYPE_LOAD_BALANCER</constant></term>
     <listitem>
      <para>Le type de serveur équilibreur de charge, retourné par <methodname>MongoDB\Driver\ServerDescription::getType</methodname>.</para>
     </listitem>
    </varlistentry>

   </variablelist>
  </section>
<!-- }}} -->

 </partintro>

 &reference.mongodb.mongodb.driver.entities.serverdescription;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
