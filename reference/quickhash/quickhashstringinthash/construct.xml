<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 95a1b13144581b79cbebe041abed61d43430d902 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="quickhashstringinthash.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>QuickHashStringIntHash::__construct</refname>
  <refpurpose>Créer un nouvel objet QuickHashStringIntHash</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <methodname>QuickHashStringIntHash::__construct</methodname>
   <methodparam><type>int</type><parameter>size</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Ce constructeur crée un nouvel objet <classname>QuickHashStringIntHash</classname>. La taille est le nombre de
   listes de seaux à créer. Plus il y a de listes, moins il y aura de collisions.
   Les options sont également prises en charge.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>size</parameter></term>
     <listitem>
      <para>
       La quantité de listes de seaux à configurer. Le nombre que vous passez sera
       automatiquement arrondi à la puissance de deux suivante. Il est également
       automatiquement limité de <literal>64</literal> à <literal>4194304</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Les options que vous pouvez passer sont :
       <constant>QuickHashStringIntHash::CHECK_FOR_DUPES</constant>, qui vérifie qu'aucune entrée dupliquée
       n'est ajoutée au hachage et
       <constant>QuickHashStringIntHash::DO_NOT_USE_ZEND_ALLOC</constant> pour ne pas utiliser le gestionnaire de mémoire
       interne de PHP.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Renvoie un nouveau <classname>QuickHashStringIntHash</classname> objet.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple de <function>QuickHashStringIntHash::__construct</function></title>
    <programlisting role="php">
<![CDATA[
<?php
var_dump( new QuickHashStringIntHash( 1024 ) );
var_dump( new QuickHashStringIntHash( 1024, QuickHashStringIntHash::CHECK_FOR_DUPES ) );
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
