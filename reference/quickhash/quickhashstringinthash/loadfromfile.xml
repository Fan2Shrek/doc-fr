<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 95a1b13144581b79cbebe041abed61d43430d902 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="quickhashstringinthash.loadfromfile" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>QuickHashStringIntHash::loadFromFile</refname>
  <refpurpose>Cette méthode d'usine crée un hachage à partir d'un fichier</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <modifier>static</modifier> <type>QuickHashStringIntHash</type><methodname>QuickHashStringIntHash::loadFromFile</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>size</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Cette méthode d'usine crée un nouveau hachage à partir d'un fichier de définition sur le disque. Le
   format du fichier se compose d'une signature <literal>'QH\0x21\0'</literal>, du nombre d'éléments en tant que
   entier signé 32 bits en Endianness du système, d'un entier non signé 32 bits
   contentant le nombre de données d'éléments à suivre en caractères. Ces données
   d'éléments contiennent toutes les chaînes. Suit un autre entier signé 32 bits
   contenant le nombre de listes de seaux. Après l'en-tête et les chaînes,
   les éléments suivent. Ils sont ordonnés par liste de seaux de sorte que les clés ne
   doivent pas être hachées pour restaurer le hachage. Pour chaque liste de seaux, les
   informations suivantes sont stockées (toutes en entiers 32 bits) : l'index de la liste de seaux,
   le nombre d'éléments dans cette liste, et ensuite par paire de deux
   entiers non signés 32 bits les éléments, où le premier est l'index
   dans la liste de chaînes contenant les clés, et le second la valeur. Un
   exemple pourrait être :
  </para>
  <para>
   <example>
    <title>Format de fichier QuickHash StringIntHash</title>
    <screen><![CDATA[00000000  51 48 21 00 02 00 00 00  09 00 00 00 40 00 00 00  |QH!.........@...|
00000010  4f 4e 45 00 4e 49 4e 45  00 07 00 00 00 01 00 00  |ONE.NINE........|
00000020  00 00 00 00 00 01 00 00  00 2f 00 00 00 01 00 00  |........./......|
00000030  00 04 00 00 00 03 00 00  00                       |.........|
00000039]]></screen>
   </example>
  </para>
  <para>
   <example>
    <title>Format de fichier QuickHash IntHash</title>
    <screen><![CDATA[header signature ('QH'; key type: 2; value type: 1; filler: \0x00)
00000000  51 48 21 00

number of elements:
00000004  02 00 00 00

length of string values (9 characters):
00000008  09 00 00 00

number of hash bucket lists (this is configured for hashes as argument to the
constructor normally, 64 in this case):
0000000C  40 00 00 00

string values:
00000010  4f 4e 45 00 4e 49 4e 45  00

bucket lists:
  bucket list 1 (with key 7, and 1 element):
    header:
    07 00 00 00 01 00 00 00
    elements (key index: 0 ('ONE'), value = 0):
    00 00 00 00 01 00 00 00
  bucket list 2 (with key 0x2f, and 1 element):
    header:
    2f 00 00 00 01 00 00 00
    elements (key index: 4 ('NINE'), value = 3):
    04 00 00 00 03 00 00 00

]]></screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Le nom du fichier à partir duquel lire le hachage.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>size</parameter></term>
     <listitem>
      <para>
       Le nombre de listes de seaux à configurer. Le nombre que vous passez sera
       automatiquement arrondi à la puissance de deux suivante. Il est également
       automatiquement limité de <literal>4</literal> à <literal>4194304</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Les mêmes options que le constructeur de la classe; sauf que l'option
       size est ignorée. Elle est lue à partir du format de fichier (contrairement aux
       classes <classname>QuickHashIntHash</classname> et <classname>QuickHashIntStringHash</classname>, où elle est
       automatiquement calculée à partir du nombre d'entrées dans le hachage.)
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Renvoie un nouveau <classname>QuickHashStringIntHash</classname>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple de <function>QuickHashStringIntHash::loadFromFile</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$file = dirname( __FILE__ ) . "/simple.hash.string";
$hash = QuickHashStringIntHash::loadFromFile(
    $file,
    QuickHashStringIntHash::DO_NOT_USE_ZEND_ALLOC
);
foreach( range( 0, 0x0f ) as $key )
{
    $i = 48712 + $key * 1631;
    $k = base_convert( $i, 10, 36 );
    echo $k, ' => ', $hash->get( $k ), "\n";
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
11l4 => 48712
12uf => 50343
143q => 51974
15d1 => 53605
16mc => 55236
17vn => 56867
194y => 58498
1ae9 => 60129
1bnk => 61760
1cwv => 63391
1e66 => 65022
1ffh => 66653
1gos => 68284
1hy3 => 69915
1j7e => 71546
1kgp => 73177
]]>
    </screen>
   </example>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
