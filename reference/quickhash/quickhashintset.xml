<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d17b7b4947e7819ff5036715dd706be87ae4def Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<reference xml:id="class.quickhashintset" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>La classe QuickHashIntSet</title>
 <titleabbrev>QuickHashIntSet</titleabbrev>

 <partintro>

<!-- {{{ QuickHashIntSet intro -->
  <section xml:id="quickhashintset.intro">
   &reftitle.intro;
   <para>
    Cette classe enveloppe un ensemble contenant des nombres entiers.
   </para>
   <para>
    Les ensembles peuvent être utilisés pour stocker des valeurs uniques avec <link linkend="control-structures.foreach"><literal>foreach</literal></link> car l'interface <interfacename>Iterator</interfacename> est
    implémentée. L'ordre dans lequel les éléments sont retournés n'est pas
    garanti.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="quickhashintset.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>QuickHashIntSet</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>QuickHashIntSet</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="quickhashintset.constants.check-for-dupes">QuickHashIntSet::CHECK_FOR_DUPES</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="quickhashintset.constants.do-not-use-zend-alloc">QuickHashIntSet::DO_NOT_USE_ZEND_ALLOC</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="quickhashintset.constants.hasher-no-hash">QuickHashIntSet::HASHER_NO_HASH</varname>
     <initializer>256</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="quickhashintset.constants.hasher-jenkins1">QuickHashIntSet::HASHER_JENKINS1</varname>
     <initializer>512</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="quickhashintset.constants.hasher-jenkins2">QuickHashIntSet::HASHER_JENKINS2</varname>
     <initializer>1024</initializer>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.quickhashintset')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>

<!-- {{{ QuickHashIntSet constants -->
  <section xml:id="quickhashintset.constants">
   &reftitle.constants;
   <variablelist>

    <varlistentry xml:id="quickhashintset.constants.check-for-dupes">
     <term><constant>QuickHashIntSet::CHECK_FOR_DUPES</constant></term>
     <listitem>
      <para>Si activé, l'ajout d'éléments dupliqués à un ensemble (via <methodname>QuickHashIntSet::add</methodname> ou
      <methodname>QuickHashIntSet::loadFromFile</methodname>) entraînera la suppression de ces éléments de l'ensemble.
      Cela prendra plus de temps, donc n'utilisez cette option que si nécessaire.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="quickhashintset.constants.do-not-use-zend-alloc">
     <term><constant>QuickHashIntSet::DO_NOT_USE_ZEND_ALLOC</constant></term>
     <listitem>
      <para>Désactive l'utilisation du gestionnaire de mémoire interne de PHP
      pour les structures de jeu internes. Avec cette option activée, les allocations internes ne
      compteront pas pour les paramètres <link linkend="ini.memory-limit">memory_limit</link>.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="quickhashintset.constants.hasher-no-hash">
     <term><constant>QuickHashIntSet::HASHER_NO_HASH</constant></term>
     <listitem>
      <para>Sélectionne de ne pas utiliser de fonction de hachage, mais simplement
      utiliser un modulo pour trouver l'index de la liste de seaux. Cela n'est pas plus rapide que le hachage normal, et
      donne plus de collisions.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="quickhashintset.constants.hasher-jenkins1">
     <term><constant>QuickHashIntSet::HASHER_JENKINS1</constant></term>
     <listitem>
      <para>Ceci est la fonction de hachage par défaut pour transformer les hachages entiers
      en index de liste de seaux.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="quickhashintset.constants.hasher-jenkins2">
     <term><constant>QuickHashIntSet::HASHER_JENKINS2</constant></term>
     <listitem>
      <para>Sélectionne un algorithme de hachage de variante.</para>
     </listitem>
    </varlistentry>

   </variablelist>
  </section>
<!-- }}} -->


 </partintro>

 &reference.quickhash.entities.quickhashintset;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
