<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d76a7fe17dd2488e47d664a8ab38e161b13ac843 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.sodium-crypto-box-seal" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>sodium_crypto_box_seal</refname>
  <refpurpose>Chiffrement anonyme avec clé publique</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>sodium_crypto_box_seal</methodname>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>message</parameter></methodparam>
   <methodparam><type>string</type><parameter>public_key</parameter></methodparam>
  </methodsynopsis>
  <para>
   Chiffre un message de telle sorte que seul le destinataire puisse le déchiffrer.
  </para>
  <para>
   Contrairement à <function>sodium_crypto_box</function>, vous n'avez besoin que de la clé publique
   du destinataire pour utiliser <function>sodium_crypto_box_seal</function>. Une conséquence de cette
   commodité, cependant, est que le texte chiffré n'est pas lié à une clé publique statique,
   et n'est donc pas authentifié. D'où le chiffrement anonyme avec clé publique.
  </para>
  <para>
   <function>sodium_crypto_box_seal</function> fournit toujours l'intégrité du texte chiffré. Juste pas
   l'authentification de l'identité de l'expéditeur.
  </para>
  <para>
   Si vous avez également besoin d'authentification de l'expéditeur, les fonctions <function>sodium_crypto_sign</function>
   sont probablement le meilleur point de départ.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>message</parameter></term>
    <listitem>
     <para>
      Le message à chiffrer.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>public_key</parameter></term>
    <listitem>
     <para>
      La clé publique qui correspond à la seule clé qui peut déchiffrer le message.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un texte chiffré sous la forme de (clé publique unique, message chiffré, étiquette d'authentification).
  </para>
 </refsect1>

 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <example xml:id="sodium-crypto-box-seal.example.basic"><!-- {{{ -->
   <title>Exemple de <function>sodium_crypto_box_seal</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$keypair = sodium_crypto_box_keypair();
$public_key = sodium_crypto_box_publickey($keypair);

// Le texte en clair obfusqué pour rendre l'exemple plus amusant
$plaintext_b64 = "V3JpdGluZyBzb2Z0d2FyZSBpbiBQSFAgY2FuIGJlIGEgZGVsaWdodCE=";
$decoded_plaintext = sodium_base642bin($plaintext_b64, SODIUM_BASE64_VARIANT_ORIGINAL);

$sealed = sodium_crypto_box_seal($decoded_plaintext, $public_key);
var_dump(base64_encode($sealed));

$opened = sodium_crypto_box_seal_open($sealed, $keypair);
var_dump($opened);
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
string(120) "oRBXXAV4iQBrxlV4A21Bord8Yo/D8ZlrIIGNyaRCcGBfpz0map52I3xq6l+CST+1NSgQkbV+HiYyFjXWiWiaCGupGf+zl4bgWj/A9Adtem7Jt3h3emrMsLw="
string(41) "Writing software in PHP can be a delight!"
]]>
   </screen>
  </example><!-- }}} -->
 </refsect1><!-- }}} -->

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
