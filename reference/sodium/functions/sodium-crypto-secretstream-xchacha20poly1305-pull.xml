<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 14e3e35ca0c82b3b5fb3fd71b9dd70e9eb250ab1 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="function.sodium-crypto-secretstream-xchacha20poly1305-pull">
 <refnamediv>
  <refname>sodium_crypto_secretstream_xchacha20poly1305_pull</refname>
  <refpurpose>Déchiffre un morceau de données d'un flux chiffré</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>sodium_crypto_secretstream_xchacha20poly1305_pull</methodname>
   <methodparam><type>string</type><parameter role="reference">state</parameter></methodparam>
   <methodparam><type>string</type><parameter>ciphertext</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>additional_data</parameter><initializer>""</initializer></methodparam>
  </methodsynopsis>
  <para>
   Déchiffre un morceau de données d'un flux chiffré.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>state</parameter></term>
    <listitem>
     <para>
      Voir <function>sodium_crypto_secretstream_xchacha20poly1305_init_pull</function>
      et <function>sodium_crypto_secretstream_xchacha20poly1305_init_push</function>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>ciphertext</parameter></term>
    <listitem>
     <para>
      Le morceau de texte chiffré à déchiffrer.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>additional_data</parameter></term>
    <listitem>
     <para>
      Optionnel des données supplémentaires à inclure dans le tag d'authentification.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un tableau avec deux valeurs:
   <itemizedlist>
    <listitem>
     <para>
      <type>string</type>; le morceau de texte déchiffré.
     </para>
    </listitem>
    <listitem>
     <para>
      <type>int</type>; Une étiquette optionnelle (si fournie lors de l'envoi). Valeurs possibles:
      <simplelist>
       <member>
        <constant>SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_MESSAGE</constant>:
        l'étiquette la plus courante, qui n'ajoute aucune information sur la nature du message.
       </member>
       <member>
        <constant>SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_FINAL</constant>:
        indique que le message marque la fin du flux, et efface la clé secrète utilisée pour chiffrer la séquence précédente.
       </member>
       <member>
        <constant>SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_PUSH</constant>:
        indique que le message marque la fin d'un ensemble de messages, mais pas la fin du flux.
        Par exemple, une énorme chaîne JSON envoyée en plusieurs morceaux peut utiliser cette étiquette pour indiquer à l'application que
        la chaîne est complète et qu'elle peut être décodée. Mais le flux lui-même n'est pas fermé, et d'autres données peuvent suivre.
       </member>
       <member>
        <constant>SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_REKEY</constant>:
        "forget" la clé utilisée pour chiffrer ce message et les précédents, et dérive une nouvelle clé secrète.
       </member>
      </simplelist>
     </para>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
