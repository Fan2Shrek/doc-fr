<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b7d6aaa945219da933a0ac2a4b610aa1b09dfcb0 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
 <variablelist role="constant_list">
  <title><function>curl-setopt</function></title>
  <varlistentry xml:id="constant.curlopt-abstract-unix-socket">
   <term>
    <constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Active l'utilisation d'un socket Unix abstrait à la place
     d'établir une connexion TCP à un hôte et définit le chemin donné
     en <type>string</type>. Cette option partage les mêmes sémantiques
     que <constant>CURLOPT_UNIX_SOCKET_PATH</constant>. Ces deux options
     partagent le même stockage et donc une seule d'entre elles peut être
     définie par un gestionnaire.
     Disponible depuis PHP 7.3.0 et cURL 7.53.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-altsvc">
   <term>
    <constant>CURLOPT_ALTSVC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passer le nom de fichier pour que cURL utilise comme cache Alt-Svc pour lire le contenu du cache existant
     et éventuellement le réécrire après un transfert, à moins que <constant>CURLALTSVC_READONLYFILE</constant>
     ne soit défini via <constant>CURLOPT_ALTSVC_CTRL</constant>.
     Disponible depuis PHP 8.2.0 et cURL 7.64.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-altsvc-ctrl">
   <term>
    <constant>CURLOPT_ALTSVC_CTRL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Peuple le masque de bits avec le bon ensemble de fonctionnalités pour indiquer à cURL comment gérer Alt-Svc pour les
     transferts utilisant ce gestionnaire. cURL n'accepte que les en-têtes Alt-Svc sur HTTPS. Il ne complétera également
     une demande à une origine alternative que si cette origine est correctement hébergée sur HTTPS.
     Définir un bit activera le moteur alt-svc. Les options sont :
     Populate the bitmask with the correct set of features to instruct cURL how to handle Alt-Svc for the
     <constant>CURLALTSVC_H1</constant>,
     <constant>CURLALTSVC_H2</constant>,
     <constant>CURLALTSVC_H3</constant>, et  
     <constant>CURLALTSVC_READONLYFILE</constant>.
     Disponible depuis PHP 8.2.0 et cURL 7.64.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-autoreferer">
   <term>
    <constant>CURLOPT_AUTOREFERER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour définir automatiquement le champ <literal>Referer:</literal> dans
     les requêtes où il suit une redirection <literal>Location:</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-aws-sigv4">
   <term>
    <constant>CURLOPT_AWS_SIGV4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Apporte une authentification de signature AWS V4 sur l'en-tête HTTP(S).
     Cette option remplace tout autre type d'authentification qui a été défini dans
     <constant>CURLOPT_HTTPAUTH</constant>. Cette méthode ne peut pas être combinée avec d'autres types d'authentification.
     Disponible depuis PHP 8.2.0 et cURL 7.75.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-binarytransfer">
   <term>
    <constant>CURLOPT_BINARYTRANSFER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>

    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-buffersize">
   <term>
    <constant>CURLOPT_BUFFERSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une taille de tampon à utiliser pour chaque lecture. Il n'y a aucune garantie
     que cette demande sera satisfaite, cependant.
     Disponible depuis cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cainfo">
   <term>
    <constant>CURLOPT_CAINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom d'un fichier contenant un ou plusieurs certificats pour vérifier le
     pair avec. Cela n'a de sens que lorsqu'il est utilisé en combinaison avec
     <constant>CURLOPT_SSL_VERIFYPEER</constant>. Peut nécessiter un chemin absolu.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cainfo-blob">
   <term>
    <constant>CURLOPT_CAINFO_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom d'un fichier PEM contenant un ou plusieurs certificats pour vérifier le pair avec.
     Cette option remplace <constant>CURLOPT_CAINFO</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-capath">
   <term>
    <constant>CURLOPT_CAPATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un répertoire qui contient plusieurs certificats CA. Utilisez cette option
     en combinaison avec <constant>CURLOPT_SSL_VERIFYPEER</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ca-cache-timeout">
   <term>
    <constant>CURLOPT_CA_CACHE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponible depuis PHP 8.3.0 et cURL 7.87.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-certinfo">
   <term>
    <constant>CURLOPT_CERTINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour sortir des informations sur le certificat SSL sur <constant>STDERR</constant>
     sur les transferts sécurisés. Ajouté dans cURL 7.19.1.
     Nécessite <constant>CURLOPT_VERBOSE</constant> pour avoir un effet.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connecttimeout">
   <term>
    <constant>CURLOPT_CONNECTTIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nombre de secondes à attendre lors de la tentative de connexion. Utilisez 0 pour
     attendre indéfiniment.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connecttimeout-ms">
   <term>
    <constant>CURLOPT_CONNECTTIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nombre de millisecondes à attendre lors de la tentative de connexion. Utilisez 0 pour
     attendre indéfiniment.
     <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
     Si libcurl est compilé pour utiliser le résolveur de noms système standard, cette
     partie de la connexion utilisera toujours une résolution à la seconde complète pour
     les délais d'attente avec un délai d'attente minimum autorisé d'une seconde. Disponible depuis cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connect-only">
   <term>
    <constant>CURLOPT_CONNECT_ONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour indiquer à la librairie de ne pas effectuer d'authentification de proxy
     et de configuration de connexion requise, mais pas de transfert de données. Cette option est implémentée pour
     HTTP, SMTP et POP3.
     Disponible depuis cURL 7.15.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connect-to">
   <term>
    <constant>CURLOPT_CONNECT_TO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Connecte à un hôte et un port spécifiques au lieu de l'hôte et du port de l'URL.
     Accepte un tableau de chaînes avec le format
     <literal>HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT</literal>.
     Disponible depuis PHP 7.0.7 et cURL 7.49.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookie">
   <term>
    <constant>CURLOPT_COOKIE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le contenu de l'en-tête <literal>"Cookie: "</literal> à utiliser
     dans la requête HTTP.
     Il est à noter que plusieurs cookies sont séparés par un point-virgule suivi
     d'un espace (par exemple, <literal>fruit=apple; colour=red</literal>)
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiefile">
   <term>
    <constant>CURLOPT_COOKIEFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom du fichier contenant les données des cookies. Le fichier de cookies peut
     être au format Netscape, ou simplement des en-têtes HTTP classiques
     vidés dans un fichier.
     Si le nom est une chaîne vide, aucun cookie n'est chargé, mais la gestion des cookies
     est toujours activée.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiejar">
   <term>
    <constant>CURLOPT_COOKIEJAR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom du fichier pour sauvegarder tous les cookies internes lorsque
     le gestionnaire destructeur est appelé.
     <warning>
      <simpara>
       Depuis PHP 8.0.0, <function>curl_close</function> est une opération nulle
       et ne détruit <emphasis>pas</emphasis> le gestionnaire.
       Si les cookies doivent être écrits avant que le gestionnaire ne soit automatiquement
       détruite, appelez <function>unset</function> sur le gestionnaire.
      </simpara>
     </warning>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookielist">
   <term>
    <constant>CURLOPT_COOKIELIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une chaîne de charactères de cookies (c'est-à-dire une seule ligne dans le format Netscape/Mozilla, ou un en-tête
     Set-Cookie HTTP régulier) ajoute ce cookie unique au stockage interne des cookies.
     <literal>"ALL"</literal> efface tous les cookies stockés en mémoire.
     <literal>"SESS"</literal> efface tous les cookies de session stockés en mémoire.
     <literal>"FLUSH"</literal> écrit tous les cookies connus dans le fichier spécifié par <constant>CURLOPT_COOKIEJAR</constant>.
     <literal>"RELOAD"</literal> charge tous les cookies des fichiers spécifiés par <constant>CURLOPT_COOKIEFILE</constant>.
     Disponible depuis cURL 7.14.1
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiesession">
   <term>
    <constant>CURLOPT_COOKIESESSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour marquer ceci comme une nouvelle "session" de cookie. Cela forcera libcurl
     à ignorer tous les cookies qu'il est sur le point de charger qui sont des "cookies de session"
     de la session précédente. Par défaut, libcurl stocke et charge toujours
     tous les cookies, indépendamment du fait qu'ils soient des cookies de session ou non.
     Les cookies de session sont des cookies sans date d'expiration et ils sont censés être vivants
     et existants pour cette "session" uniquement.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-crlf">
   <term>
    <constant>CURLOPT_CRLF</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour convertir les fins de ligne Unix en fins de ligne CRLF
     sur les transferts.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-customrequest">
   <term>
    <constant>CURLOPT_CUSTOMREQUEST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une méthode de requête personnalisée à utiliser à la place de
     <literal>"GET"</literal> ou <literal>"HEAD"</literal> lors de la réalisation
     d'une requête HTTP. Ceci est utile pour effectuer
     des requêtes HTTP plus obscures comme <literal>"DELETE"</literal> ou autres.
     Les valeurs valides sont des choses comme <literal>"GET"</literal>,
     <literal>"POST"</literal>, <literal>"CONNECT"</literal> et ainsi de suite;
     c'est-à-dire ne pas entrer une ligne de requête HTTP entière ici. Par exemple,
     entrer <literal>"GET /index.html HTTP/1.0\r\n\r\n"</literal>
     serait incorrect.
     <note>
      <para>
       Ne pas faire cela sans vous assurer que le serveur supporte la méthode de requête
       personnalisée en premier.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-default-protocol">
   <term>
    <constant>CURLOPT_DEFAULT_PROTOCOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le protocole par défaut à utiliser si l'URL manque d'un nom de schéma.
     Disponible depuis PHP 7.0.7 et cURL 7.45.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-disallow-username-in-url">
   <term>
    <constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour ne pas autoriser les URL qui incluent un nom d'utilisateur. Les noms d'utilisateur sont autorisés par défaut (0).
     Disponible depuis PHP 7.3.0 et cURL 7.61.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-cache-timeout">
   <term>
    <constant>CURLOPT_DNS_CACHE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nombre de secondes à conserver les entrées DNS en mémoire. Cette
     option est définie par défaut à 120 (2 minutes).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-interface">
   <term>
    <constant>CURLOPT_DNS_INTERFACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit le nom de l'interface réseau que le résolveur DNS doit lier.
     Cela doit être un nom d'interface (pas une adresse).
     Disponible depuis PHP 7.0.7 et cURL 7.33.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-local-ip4">
   <term>
    <constant>CURLOPT_DNS_LOCAL_IP4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit l'adresse IPv4 locale à laquelle le résolveur doit se lier. L'argument
     doit contenir une seule adresse IPv4 numérique sous forme de chaîne.
     Disponible depuis PHP 7.0.7 et cURL 7.33.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-local-ip6">
   <term>
    <constant>CURLOPT_DNS_LOCAL_IP6</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit l'adresse IPv6 locale à laquelle le résolveur doit se lier. L'argument
     doit contenir une seule adresse IPv6 numérique sous forme de chaîne.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-shuffle-addresses">
   <term>
    <constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour mélanger l'ordre de toutes les adresses retournées afin qu'elles soient utilisées
     dans un ordre aléatoire, lorsqu'un nom est résolu et que plus d'une adresse IP est retournée.
     Cela peut entraîner l'utilisation d'IPv4 avant IPv6 ou vice versa. 
     Disponible depuis PHP 7.3.0 et cURL 7.60.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-use-global-cache">
   <term>
    <constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour utiliser un cache DNS global. Cette option n'est pas thread-safe.
     Elle est activée par défaut si PHP est compilé pour une utilisation non threadée
     (CLI, FCGI, Apache2-Prefork, etc.).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifyhost">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Vérifie le champ de nom du certificat SSL du serveur DNS-over-HTTPS par rapport au nom d'hôte.
     Disponible depuis PHP 8.2.0 et cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifypeer">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Vérifie l'authenticité du certificat SSL du serveur DNS-over-HTTPS.
     Disponible depuis PHP 8.2.0 et cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifystatus">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYSTATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Dit à cURL de vérifier le statut du certificat du serveur DNS-over-HTTPS
     en utilisant l'extension TLS "Certificate Status Request" (OCSP stapling).
     Disponible depuis PHP 8.2.0 et cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-url">
   <term>
    <constant>CURLOPT_DOH_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Apporte l'URL DNS-over-HTTPS.
     Disponible depuis PHP 8.1.0 et cURL 7.62.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-egdsocket">
   <term>
    <constant>CURLOPT_EGDSOCKET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Comme <constant>CURLOPT_RANDOM_FILE</constant> excepté que vous passez une chaîne qui contient un nom
     de fichier vers le socket Entropy Gathering Daemon.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-encoding">
   <term>
    <constant>CURLOPT_ENCODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le contenu des en-têtes <literal>"Accept-Encoding: "</literal>.
     Cela permet de décoder la réponse. Les encodages supportés sont
     <literal>"identity"</literal>, <literal>"deflate"</literal>, et
     <literal>"gzip"</literal>. Si une chaîne vide, <literal>""</literal>,
     est définie, un en-tête contenant tous les types d'encodage supportés est envoyé.
     Disponible depuis cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-expect-100-timeout-ms">
   <term>
    <constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le délais d'attente pour les réponses <literal>Expect: 100-continue</literal> en millisecondes.
     Par défaut, 1000 millisecondes.
     Disponible depuis PHP 7.0.7 et cURL 7.36.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-failonerror">
   <term>
    <constant>CURLOPT_FAILONERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour échouer verbalement si le code HTTP retourné
     est supérieur ou égal à 400. Le comportement par défaut est de retourner
     la page normalement, en ignorant le code. 
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-file">
   <term>
    <constant>CURLOPT_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le fichier dans lequel le transfert doit être écrit. La valeur par défaut
     est <constant>STDOUT</constant> (la fenêtre du navigateur). 
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-filetime">
   <term>
    <constant>CURLOPT_FILETIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour tenter de récupérer la date de modification
     du document distant. Cette valeur peut être récupérée en utilisant l'option 
     <constant>CURLINFO_FILETIME</constant> avec
     <function>curl_getinfo</function>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-followlocation">
   <term>
    <constant>CURLOPT_FOLLOWLOCATION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour suivre tous les en-têtes
     <literal>"Location: "</literal> envoyés par le serveur dans la réponse HTTP.
     Voir aussi <constant>CURLOPT_MAXREDIRS</constant>.
     Cette constante n'est pas disponible lorsque <link xmlns="http://docbook.org/ns/docbook" linkend="ini.open-basedir">open_basedir</link>
     est activé.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-forbid-reuse">
   <term>
    <constant>CURLOPT_FORBID_REUSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour forcer à fermer explicitement la connexion
     lorsque le processus est terminé, elle ne sera donc pas mise en cache pour réutilisation.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-fresh-connect">
   <term>
    <constant>CURLOPT_FRESH_CONNECT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour forcer l'utilisation d'une nouvelle connexion
     au lieu d'une connexion mise en cache.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpappend">
   <term>
    <constant>CURLOPT_FTPAPPEND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour ajouter au fichier distant au lieu de
     l'écraser.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpascii">
   <term>
    <constant>CURLOPT_FTPASCII</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un alias de 
     <constant>CURLOPT_TRANSFERTEXT</constant>. Utilisez plutôt cela.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftplistonly">
   <term>
    <constant>CURLOPT_FTPLISTONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour seulement lister les noms d'un
     répertoire FTP.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpport">
   <term>
    <constant>CURLOPT_FTPPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La valeur qui sera utilisée pour obtenir l'adresse IP à utiliser
     pour l'instruction FTP "PORT". L'instruction "PORT" indique
     au serveur distant de se connecter à notre adresse IP spécifiée. La
     chaîne peut être une adresse IP simple, un nom d'hôte, un nom d'interface réseau (sous Unix),
     ou juste un '-' pour utiliser l'adresse IP par défaut du système.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpsslauth">
   <term>
    <constant>CURLOPT_FTPSSLAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     L'authentification FTP (quand elle est activée):
     <constant>CURLFTPAUTH_SSL</constant> (essayer SSL en premier),
     <constant>CURLFTPAUTH_TLS</constant> (essayer TLS en premier), ou
     <constant>CURLFTPAUTH_DEFAULT</constant> (laisser cURL décider).
     Disponible depuis cURL 7.12.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-create-missing-dirs">
   <term>
    <constant>CURLOPT_FTP_CREATE_MISSING_DIRS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour créer les répertoires manquants lorsqu'une opération FTP
     rencontre un chemin qui n'existe pas actuellement.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-filemethod">
   <term>
    <constant>CURLOPT_FTP_FILEMETHOD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Indique à curl quelle méthode utiliser pour atteindre un fichier sur un serveur FTP(S). Les valeurs possibles sont
     <constant>CURLFTPMETHOD_DEFAULT</constant>,
     <constant>CURLFTPMETHOD_MULTICWD</constant>,
     <constant>CURLFTPMETHOD_NOCWD</constant>, et
     <constant>CURLFTPMETHOD_SINGLECWD</constant>.
     Disponible depuis cURL 7.15.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-ssl">
   <term>
    <constant>CURLOPT_FTP_SSL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>

    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-eprt">
   <term>
    <constant>CURLOPT_FTP_USE_EPRT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour utiliser EPRT (et LPRT) lors des
     téléchargements FTP actifs. Utilisez &false; pour désactiver EPRT et LPRT et utiliser PORT
     uniquement.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-epsv">
   <term>
    <constant>CURLOPT_FTP_USE_EPSV</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour essayer d'envoyer un commande EPSV pour les transferts FTP
     avant de revenir à PASV. Mettez à &false;
     pour désactiver EPSV.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-happy-eyeballs-timeout-ms">
   <term>
    <constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une avance pour IPv6 pour l'algorithme Happy Eyeballs. Happy Eyeballs tente
     de se connecter à la fois aux adresses IPv4 et IPv6 pour les hôtes double-stack,
     en préférant IPv6 en premier pour les millisecondes de délai d'attente.
     Par défaut à CURL_HET_DEFAULT, qui est actuellement de 200 millisecondes.
     Disponible depuis PHP 7.3.0 et cURL 7.59.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-haproxyprotocol">
   <term>
    <constant>CURLOPT_HAPROXYPROTOCOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour envoyer un en-tête de protocole HAProxy PROXY v1 au début de la connexion.
     L'action par défaut est de ne pas envoyer cet en-tête.
     Disponible depuis PHP 7.3.0 et cURL 7.60.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-header">
   <term>
    <constant>CURLOPT_HEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour inclure l'en-tête dans la sortie.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-headerfunction">
   <term>
    <constant>CURLOPT_HEADERFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une fonction de rappel acceptant deux paramètres.
     Le premier est la ressource cURL, le second est une
     chaîne avec les données d'en-tête à écrire. Les données d'en-tête doivent
     être écrites par ce rappel. Retourne le nombre de
     bytes écrits.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-headeropt">
   <term>
    <constant>CURLOPT_HEADEROPT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Les valeurs possibles sont <constant>CURLHEADER_UNIFIED</constant> ou <constant>CURLHEADER_SEPARATE</constant>.
     Défaut à <constant>CURLHEADER_SEPARATE</constant> depuis cURL
     7.42.1, et <constant>CURLHEADER_UNIFIED</constant> avant.
     Disponible depuis PHP 7.0.7 et cURL 7.37.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-hsts">
   <term>
    <constant>CURLOPT_HSTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom du fichier de cache HSTS (HTTP Strict Transport Security).
     Disponible depuis PHP 8.2.0 et cURL 7.74.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-hsts-ctrl">
   <term>
    <constant>CURLOPT_HSTS_CTRL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Contrôle le comportement HSTS (HTTP Strict Transport Security). Rempli le masque de bits avec le bon ensemble de
     fonctionnalités pour indiquer à cURL comment gérer HSTS pour les transferts utilisant ce gestionnaire.
     <constant>CURLHSTS_ENABLE</constant> active le cache HSTS en mémoire. Si le fichier de cache HSTS est défini,
     définissez <constant>CURLHSTS_READONLYFILE</constant> pour rendre le fichier en lecture seule.
     Disponible depuis PHP 8.2.0 et cURL 7.74.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http09-allowed">
   <term>
    <constant>CURLOPT_HTTP09_ALLOWED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Si on autorise les réponses HTTP/0.9. Par défaut à &false; depuis cURL 7.66.0;
     avant, c'était &true;.
     Disponible depuis PHP 7.3.15 et 7.4.3, respectivement, et cURL 7.64.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http200aliases">
   <term>
    <constant>CURLOPT_HTTP200ALIASES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un tableau de réponses HTTP 200 qui seront traitées comme valides
     et non comme des erreurs.
     Disponible depuis cURL 7.10.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpauth">
   <term>
    <constant>CURLOPT_HTTPAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La méthode d'authentification HTTP à utiliser. Les options sont :
     <constant>CURLAUTH_BASIC</constant>,
     <constant>CURLAUTH_DIGEST</constant>,
     <constant>CURLAUTH_GSSNEGOTIATE</constant>,
     <constant>CURLAUTH_NTLM</constant>,
     <constant>CURLAUTH_AWS_SIGV4</constant>,
     <constant>CURLAUTH_ANY</constant>, et
     <constant>CURLAUTH_ANYSAFE</constant>.
     L'opérateur binaire <literal>|</literal> (ou) peut être utilisé pour combiner
     plus d'une méthode. Si cela est fait, cURL interrogera le serveur pour voir
     quelles méthodes il supporte et choisira la meilleure.
     <constant>CURLAUTH_ANY</constant> définit tous les bits. cURL sélectionnera automatiquement
     celle qu'il trouve la plus sécurisée.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpget">
   <term>
    <constant>CURLOPT_HTTPGET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour réinitialiser la méthode de requête HTTP en GET.
     Puisque GET est la valeur par défaut, cela n'est nécessaire que si la méthode
     de requête a été changée.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpheader">
   <term>
    <constant>CURLOPT_HTTPHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un tableau de champs d'en-tête HTTP à définir. Ce tableau doit être au format
     <code>
      array('Content-type: text/plain', 'Content-length: 100')
     </code>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpproxytunnel">
   <term>
    <constant>CURLOPT_HTTPPROXYTUNNEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour tunneliser à travers un proxy HTTP donné.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-content-decoding">
   <term>
    <constant>CURLOPT_HTTP_CONTENT_DECODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; pour désactiver le décodage automatique du contenu de réponse.
     Disponible depuis cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-version">
   <term>
    <constant>CURLOPT_HTTP_VERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURL_HTTP_VERSION_NONE</constant> (défaut, laisse CURL
     décider quelle version utiliser),
     <constant>CURL_HTTP_VERSION_1_0</constant> (force HTTP/1.0),
     <constant>CURL_HTTP_VERSION_1_1</constant> (force HTTP/1.1),
     <constant>CURL_HTTP_VERSION_2_0</constant> (essaye HTTP 2),
     <constant>CURL_HTTP_VERSION_2</constant> (alias de <constant>CURL_HTTP_VERSION_2_0</constant>),
     <constant>CURL_HTTP_VERSION_2TLS</constant> (essaye HTTP 2 sur TLS (HTTPS) seulement) ou
     <constant>CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE</constant> (envoie des requêtes HTTP/2 sans TLS sans mise à niveau HTTP/1.1).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-infile">
   <term>
    <constant>CURLOPT_INFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le fichier à partir duquel la transfert doit être lu lors de l'envoi.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-infilesize">
   <term>
    <constant>CURLOPT_INFILESIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La taille attendue, en octets, du fichier lors de l'envoi d'un fichier
     à un site distant. Il est à noter que l'utilisation de cette option n'empêchera pas
     cURL d'envoyer plus de données, car ce qui est envoyé dépend exactement de
     <constant>CURLOPT_READFUNCTION</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-interface">
   <term>
    <constant>CURLOPT_INTERFACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom de l'interface réseau sortante à utiliser. Cela peut être un
     nom d'interface, une adresse IP ou un nom d'hôte.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ipresolve">
   <term>
    <constant>CURLOPT_IPRESOLVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Autorise une application à sélectionner le type d'adresses IP à utiliser lors de
     la résolution des noms d'hôtes. Ceci est seulement intéressant lors de l'utilisation de noms d'hôtes qui
     résolvent des adresses en utilisant plus d'une version d'IP, les valeurs possibles sont
     <constant>CURL_IPRESOLVE_WHATEVER</constant>,
     <constant>CURL_IPRESOLVE_V4</constant>,
     <constant>CURL_IPRESOLVE_V6</constant>, par défaut
     <constant>CURL_IPRESOLVE_WHATEVER</constant>.
     Disponible depuis cURL 7.10.8.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-issuercert-blob">
   <term>
    <constant>CURLOPT_ISSUERCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Emetteur du certificat SSL à partir du blob de mémoire.
     Disponible depuis PHP 8.1.0 et cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-keep-sending-on-error">
   <term>
    <constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour continuer à envoyer le corps de la requête si le code HTTP retourné est
     égal ou supérieur à 300. L'action par défaut serait d'arrêter l'envoi
     et de fermer le flux ou la connexion. Convient pour l'authentification NTLM manuelle.
     La plupart des applications n'ont pas besoin de cette option.
     Disponible depuis PHP 7.3.0 et cURL 7.51.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-keypasswd">
   <term>
    <constant>CURLOPT_KEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le mot de passe requis pour utiliser la clé privée spécifiée par <constant>CURLOPT_SSLKEY</constant>
     ou <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>.
     Disponible depuis cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-krb4level">
   <term>
    <constant>CURLOPT_KRB4LEVEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La sécurité KRB4 (Kerberos 4). Toute valeur suivante
     (dans l'ordre du moins au plus puissant) est valide :
     <literal>"clear"</literal>,
     <literal>"safe"</literal>,
     <literal>"confidential"</literal>,
     <literal>"private".</literal>.
     Si la chaîne ne correspond pas à l'une de ces valeurs,
     <literal>"private"</literal> est utilisé. Définir cette option à &null;
     désactivera la sécurité KRB4. Actuellement, la sécurité KRB4 ne fonctionne
     qu'avec les transactions FTP.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-login-options">
   <term>
    <constant>CURLOPT_LOGIN_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Peut être utilisé pour définir des options de connexion spécifiques au protocole, telles que le
     mécanisme d'authentification préféré via "AUTH=NTLM" ou "AUTH=*",
     et doit être utilisé en conjonction avec l'option
     <constant>CURLOPT_USERNAME</constant>.
     Disponible depuis PHP 7.0.7 et cURL 7.34.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-low-speed-limit">
   <term>
    <constant>CURLOPT_LOW_SPEED_LIMIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La vitesse de transfert, en octets par seconde, que le transfert doit être
     inférieur pendant le compte de <constant>CURLOPT_LOW_SPEED_TIME</constant>
     secondes avant que PHP ne considère le transfert trop lent et l'interrompe.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-low-speed-time">
   <term>
    <constant>CURLOPT_LOW_SPEED_TIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nombre de secondes que la vitesse de transfert doit être inférieure
     à <constant>CURLOPT_LOW_SPEED_LIMIT</constant> avant que PHP ne considère
     le transfert trop lent et l'interrompe.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-rcpt-alllowfails">
   <term>
    <constant>CURLOPT_MAIL_RCPT_ALLLOWFAILS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponible depuis PHP 8.2.0 et cURL 7.69.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxage-conn">
   <term>
    <constant>CURLOPT_MAXAGE_CONN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le temps maximum d'inactivité autorisé pour une connexion existante pour être considérée pour réutilisation.
     Par défaut, l'âge maximum est défini à <literal>118</literal> secondes.
     Disponible depuis PHP 8.2.0 et cURL 7.65.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxconnects">
   <term>
    <constant>CURLOPT_MAXCONNECTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le maximum de connexions persistantes autorisées.
     Lorsque la limite est atteinte, la plus ancienne dans le cache est fermée
     pour empêcher l'augmentation du nombre de connexions ouvertes.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxfilesize-large">
   <term>
    <constant>CURLOPT_MAXFILESIZE_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La taille maximale en octets autorisée pour le téléchargement. Si le fichier demandé est trouvé plus grand que cette valeur,
     le transfert ne démarrera pas et <constant>CURLE_FILESIZE_EXCEEDED</constant> sera retourné.
     La taille du fichier n'est pas toujours connue avant le téléchargement, et pour de tels fichiers cette option n'a aucun effet même si
     le transfert de fichier finit par être plus grand que cette limite donnée.
     Disponible depuis PHP 8.2.0 et cURL 7.11.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxlifetime-conn">
   <term>
    <constant>CURLOPT_MAXLIFETIME_CONN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le temps maximum en secondes, depuis la création de la connexion, autorisé pour une connexion
     existante pour être considérée pour réutilisation. Si une connexion est trouvée dans le cache qui est plus ancienne
     que cette valeur, elle sera plutôt fermée une fois que tous les transferts en cours sont terminés.
     Par défaut à 0 secondes, ce qui signifie que l'option est désactivée et que toutes les connexions sont éligibles pour réutilisation.
     Disponible depuis PHP 8.2.0 et cURL 7.80.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxredirs">
   <term>
    <constant>CURLOPT_MAXREDIRS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La quantité maximale de redirections HTTP à suivre. Utilisez cette option
     aux côtés de <constant>CURLOPT_FOLLOWLOCATION</constant>.
     La valeur par défaut de <literal>20</literal> est définie pour éviter les redirections infinies.
     Définir à <literal>-1</literal> permet les redirections infinies, et <literal>0</literal>
     refuse toutes les redirections.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-max-recv-speed-large">
   <term>
    <constant>CURLOPT_MAX_RECV_SPEED_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Si un téléchargement dépasse cette vitesse (comptée en octets par seconde)
     en moyenne cumulative pendant le transfert, le transfert sera mis en pause pour
     maintenir la vitesse moyenne inférieure ou égale à la valeur du paramètre.
     La valeur par défaut est une vitesse illimitée.
     Disponible depuis cURL 7.15.5
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-max-send-speed-large">
   <term>
    <constant>CURLOPT_MAX_SEND_SPEED_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Si un téléversement dépasse cette vitesse (comptée en octets par seconde)
     en moyenne cumulative pendant le transfert, le transfert sera mis en pause pour
     maintenir la vitesse moyenne inférieure ou égale à la valeur du paramètre.
     La valeur par défaut est une vitesse illimitée.
     Disponible depuis cURL 7.15.5
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mime-options">
   <term>
    <constant>CURLOPT_MIME_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponible depuis PHP 8.3.0 et cURL 7.81.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mute">
   <term>
    <constant>CURLOPT_MUTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour être complètement silencieux avec
     les fonctions cURL.
     Enlèvé depuis cURL 7.15.5. Utilisez plutôt <constant xmlns="http://docbook.org/ns/docbook">CURLOPT_RETURNTRANSFER</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-netrc">
   <term>
    <constant>CURLOPT_NETRC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour scanner le fichier <filename>~/.netrc</filename>
     pour trouver un nom d'utilisateur et un mot de passe pour le site distant
     avec lequel une connexion est établie.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-nobody">
   <term>
    <constant>CURLOPT_NOBODY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour exclure le corps de la sortie.
     La méthode de requête est alors définie sur HEAD. Changer cela en &false;
     ne le change pas en GET.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-noprogress">
   <term>
    <constant>CURLOPT_NOPROGRESS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour désactiver la barre de progression pour les transferts cURL.
     <note>
      <para>
       PHP définit automatiquement cette option à &true;, cela ne devrait être
       changé que pour des raisons de débogage.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-nosignal">
   <term>
    <constant>CURLOPT_NOSIGNAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour ignorer toute fonction cURL qui envoie un
     signal au processus PHP. Cela est activé par défaut
     dans les SAPI multi-thread pour que les options de délai d'attente puissent toujours être utilisées.
     Disponible depuis cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-passwdfunction">
   <term>
    <constant>CURLOPT_PASSWDFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une fonction de rappel acceptant trois paramètres.
     Le premier est la ressource cURL, le second est une
     chaîne contenant un prompt de mot de passe, et le troisième est la longueur maximale
     du mot de passe. Retourne la chaîne contenant le mot de passe.
     Enlevé depuis PHP 7.3.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-password">
   <term>
    <constant>CURLOPT_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le mot de passe à utiliser dans d'authentification.
     Disponible depuis cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-path-as-is">
   <term>
    <constant>CURLOPT_PATH_AS_IS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour ne pas traiter les séquences de points.
     Disponible depuis PHP 7.0.7 et cURL 7.42.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pinnedpublickey">
   <term>
    <constant>CURLOPT_PINNEDPUBLICKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit la clé publique épinglée.
     La chaîne peut être le nom de fichier de votre clé publique épinglée. Le format
     de fichier attendu est "PEM" ou "DER". La chaîne peut aussi être un nombre
     quelconque de hachages sha256 encodés en base64 précédés de "sha256//"
     et séparés par ";".
     Disponible depuis PHP 7.0.7 et cURL 7.39.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pipewait">
   <term>
    <constant>CURLOPT_PIPEWAIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour attendre le pipelining/multiplexage.
     Disponible depuis PHP 7.0.7 et cURL 7.43.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-port">
   <term>
    <constant>CURLOPT_PORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une alternative au numéro de port pour se connecter.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-post">
   <term>
    <constant>CURLOPT_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour effectuer un POST HTTP régulier. Ce POST est
     le type <literal>application/x-www-form-urlencoded</literal> le plus
     couramment utilisé par les formulaires HTML.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postfields">
   <term>
    <constant>CURLOPT_POSTFIELDS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Les données complètes à envoyer dans une opération HTTP "POST".
     Ce paramètre peut être passé soit
     sous forme de chaîne urlencodée comme '<literal>para1=val1&amp;para2=val2&amp;...</literal>'
     ou sous forme d'un tableau avec le nom du champ comme clé et les données du champ comme valeur.
     Si <parameter>value</parameter> est un tableau, l'en-tête
     <literal>Content-Type</literal> sera défini sur
     <literal>multipart/form-data</literal>.
     Les fichiers peuvent être envoyés en utilisant <classname>CURLFile</classname> ou <classname>CURLStringFile</classname>,
     auquel cas <parameter>value</parameter> doit être un tableau.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postquote">
   <term>
    <constant>CURLOPT_POSTQUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un tableau de commandes FTP à exécuter sur le serveur après la requête
     FTP a été effectuée.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postredir">
   <term>
    <constant>CURLOPT_POSTREDIR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un masque de bits de 1 (301 Moved Permanently), 2 (302 Found)
     et 4 (303 See Other) si la méthode HTTP POST doit être maintenue
     lorsque <constant>CURLOPT_FOLLOWLOCATION</constant> est défini et qu'un
     type spécifique de redirection se produit.
     Disponible depuis cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pre-proxy">
   <term>
    <constant>CURLOPT_PRE_PROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit une chaîne <type>string</type> contenant le nom d'hôte ou l'adresse IP numérique pointée
     à utiliser comme préproxy auquel curl se connecte avant de
     se connecter au proxy HTTP(S) spécifié dans l'option
     <constant>CURLOPT_PROXY</constant> pour la prochaine requête.
     Le préproxy ne peut être qu'un proxy SOCKS et il doit être préfixé par
     <literal>[scheme]://</literal> pour spécifier quel type de chaussettes est utilisé.
     Une adresse IP numérique IPv6 doit être écrite entre [crochets].
     Définir le préproxy sur une chaîne vide désactive explicitement l'utilisation d'un préproxy.
     Pour spécifier le numéro de port dans cette chaîne, ajoutez <literal>:[port]</literal>
     à la fin du nom d'hôte. Le numéro de port du proxy peut éventuellement être
     spécifié avec l'option séparée <constant>CURLOPT_PROXYPORT</constant>.
     Par défaut, utilise le port 1080 pour les proxys si un port n'est pas spécifié.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-private">
   <term>
    <constant>CURLOPT_PRIVATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     N'importe quelle donnée qui devrait être associée à ce gestionnaire cURL. Ces données
     peuvent ensuite être récupérées avec l'option
     <constant>CURLINFO_PRIVATE</constant> de
     <function>curl_getinfo</function>. cURL ne fait rien avec ces données.
     Lors de l'utilisation d'un gestionnaire cURL multi, ces données privées sont typiquement une
     clé unique pour identifier un gestionnaire cURL standard.
     Disponible depuis cURL 7.10.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-progressfunction">
   <term>
    <constant>CURLOPT_PROGRESSFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une fonction de rappel acceptant cinq paramètres.
     Le premier est la ressource cURL, le second est le nombre total
     d'octets attendus à être téléchargés, le troisième est le nombre
     d'octets téléchargés jusqu'à présent, le quatrième est le nombre total
     d'octets attendus à être téléversés, et le cinquième est le nombre
     d'octets téléversés jusqu'à présent.
     <note>
      <para>
       La fonction est appelée lorsque l'option <constant>CURLOPT_NOPROGRESS</constant>
       est définie sur &false;.
      </para>
     </note>
     Renvoyer un non-zéro pour annuler la transfert. Dans ce cas, le
     transfert définira une erreur <constant>CURLE_ABORTED_BY_CALLBACK</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-protocols">
   <term>
    <constant>CURLOPT_PROTOCOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un masque de bits de valeurs <constant>CURLPROTO_*</constant>. Si utilisé, ce masque
     limite les protocoles que libcurl peut utiliser dans le transfert. Cela vous permet d'avoir
     un libcurl compilé pour supporter une large gamme de protocoles mais de limiter
     des transferts spécifiques à n'utiliser qu'un sous-ensemble d'entre eux. Par défaut,
     libcurl acceptera tous les protocoles qu'il supporte.
     Voir <constant>CURLOPT_REDIR_PROTOCOLS</constant>.
     Les protocoles valides sont :
     <constant>CURLPROTO_HTTP</constant>,
     <constant>CURLPROTO_HTTPS</constant>,
     <constant>CURLPROTO_FTP</constant>,
     <constant>CURLPROTO_FTPS</constant>,
     <constant>CURLPROTO_SCP</constant>,
     <constant>CURLPROTO_SFTP</constant>,
     <constant>CURLPROTO_TELNET</constant>,
     <constant>CURLPROTO_LDAP</constant>,
     <constant>CURLPROTO_LDAPS</constant>,
     <constant>CURLPROTO_DICT</constant>,
     <constant>CURLPROTO_FILE</constant>,
     <constant>CURLPROTO_TFTP</constant>,
     <constant>CURLPROTO_MQTT</constant>,
     <constant>CURLPROTO_ALL</constant>
     Disponible depuis cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-protocols-str">
   <term>
    <constant>CURLOPT_PROTOCOLS_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponible depuis PHP 8.3.0 et cURL 7.85.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy">
   <term>
    <constant>CURLOPT_PROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le proxy HTTP pour tunneler les requêtes à travers.  
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyauth">
   <term>
    <constant>CURLOPT_PROXYAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La méthode d'authentification HTTP à utiliser pour la connexion au proxy
     Utiliser les mêmes masques de bits que décrits dans
     <constant>CURLOPT_HTTPAUTH</constant>. Pour l'authentification du proxy,
     seulement <constant>CURLAUTH_BASIC</constant> et
     <constant>CURLAUTH_NTLM</constant> sont actuellement supportés. 
     Disponible depuis cURL 7.10.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyheader">
   <term>
    <constant>CURLOPT_PROXYHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un tableau d'en-têtes HTTP personnalisés à envoyer au proxy.
     Disponible depuis PHP 7.0.7 et cURL 7.37.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyport">
   <term>
    <constant>CURLOPT_PROXYPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le numéro de port du proxy à connecter. Ce numéro de port peut
     aussi être défini dans <constant>CURLOPT_PROXY</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxytype">
   <term>
    <constant>CURLOPT_PROXYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Soit <constant>CURLPROXY_HTTP</constant> (défaut),
     <constant>CURLPROXY_SOCKS4</constant>,
     <constant>CURLPROXY_SOCKS5</constant>,
     <constant>CURLPROXY_SOCKS4A</constant> ou 
     <constant>CURLPROXY_SOCKS5_HOSTNAME</constant>.
     Disponible depuis cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyuserpwd">
   <term>
    <constant>CURLOPT_PROXYUSERPWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un nom d'utilisateur et un mot de passe formatés comme
     <literal>"[username]:[password]"</literal> à utiliser pour la
     connexion au proxy.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-cainfo">
   <term>
    <constant>CURLOPT_PROXY_CAINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le chemin vers le fichier de certificats du proxy Certificate Authority (CA). Définir le chemin comme une
     <type>string</type> nommant un fichier contenant un ou plusieurs certificats
     pour vérifier le proxy HTTPS.
     Cette option est pour se connecter à un proxy HTTPS, pas à un serveur HTTPS.
     La valeur par défaut est le chemin système où le bundle cacert de libcurl
     est supposé être stocké.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-cainfo-blob">
   <term>
    <constant>CURLOPT_PROXY_CAINFO_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom du fichier PEM contenant un ou plusieurs certificats pour vérifier le proxy HTTPS.
     Cette option est pour se connecter à un proxy HTTPS, pas à un serveur HTTPS.
     Par défaut, le chemin système où le bundle cacert de libcurl est supposé
     être stocké.
     Disponible depuis PHP 8.2.0 et cURL 7.77.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-capath">
   <term>
    <constant>CURLOPT_PROXY_CAPATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le répertoire contenant plusieurs certificats CA pour vérifier le proxy HTTPS.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-crlfile">
   <term>
    <constant>CURLOPT_PROXY_CRLFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit le nom de fichier avec la concaténation de la liste de révocation de certificat (CRL)
     au format PEM à utiliser dans la validation du certificat qui se produit pendant
     l'échange SSL.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-issuercert">
   <term>
    <constant>CURLOPT_PROXY_ISSUERCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom de fichier du certificat SSL de l'émetteur du proxy.
     Disponible depuis PHP 8.1.0 et cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-issuercert-blob">
   <term>
    <constant>CURLOPT_PROXY_ISSUERCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le certificat SSL de l'émetteur du proxy à partir du blob de mémoire.
     Disponible depuis PHP 8.1.0 et cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-keypasswd">
   <term>
    <constant>CURLOPT_PROXY_KEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit la chaîne à utiliser comme mot de passe pour charger la clé privée
     <constant>CURLOPT_PROXY_SSLKEY</constant>. Vous n'avez jamais besoin d'un
     mot de passe pour charger un certificat mais vous en avez besoin pour charger
     votre clé privée. Cette option est pour se connecter à un proxy HTTPS, pas à un serveur HTTPS.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-pinnedpublickey">
   <term>
    <constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit la clé publique épinglée pour le proxy HTTPS. La chaîne peut être le nom de fichier
     de votre clé publique épinglée. Le format de fichier attendu est "PEM" ou "DER".
     La chaîne peut aussi être un nombre quelconque de hachages sha256 encodés en base64 précédés de
     "sha256//" et séparés par ";".
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-service-name">
   <term>
    <constant>CURLOPT_PROXY_SERVICE_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom du service d'authentification du proxy.
     Disponible depuis PHP 7.0.7, cURL 7.43.0 (pour les proxies HTTP) et cURL 7.49.0 (pour les proxies SOCKS5).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcert">
   <term>
    <constant>CURLOPT_PROXY_SSLCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom du fichier de votre certificat client utilisé pour se connecter au proxy HTTPS.
     Le format par défaut est "P12" sur Secure Transport et "PEM" sur les autres moteurs,
     et peut être changé avec <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>.
     Avec NSS ou Secure Transport, cela peut aussi être le surnom du certificat
     avec lequel vous souhaitez vous authentifier tel qu'il est nommé dans la base de données de sécurité.
     Si vous voulez utiliser un fichier du répertoire courant, veuillez le préfixer avec
     le préfixe "./" pour éviter toute confusion avec un surnom.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcerttype">
   <term>
    <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le format de votre certificat client utilisé pour se connecter au proxy HTTPS.
     Les formats supportés sont "PEM" et "DER", sauf avec Secure Transport.
     OpenSSL (versions 0.9.3 et ultérieures) et Secure Transport
     (sur iOS 5 ou ultérieur, ou OS X 10.7 ou ultérieur) supportent également "P12" pour
     les fichiers encodés en PKCS#12. Par défaut, c'est "PEM".
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcert-blob">
   <term>
    <constant>CURLOPT_PROXY_SSLCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le certificat client pour le proxy HTTPS à partir du blob de mémoire.
     Disponible depuis PHP 8.1.0 et cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkey">
   <term>
    <constant>CURLOPT_PROXY_SSLKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom de fichier de votre clé privée utilisée pour se connecter au proxy HTTPS.
     Le format par défaut est "PEM" et peut être changé avec
     <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>.
     (iOS et Mac OS X uniquement) Cette option est ignorée si curl a été compilé avec Secure Transport. Disponible si compilé avec TLS.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkeytype">
   <term>
    <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le format de votre clé privée. Les formats supportés sont "PEM", "DER" et "ENG".
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkey-blob">
   <term>
    <constant>CURLOPT_PROXY_SSLKEY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La clé privée pour le certificat du proxy HTTPS à partir du blob de mémoire.
     Disponible depuis PHP 8.1.0 et cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslversion">
   <term>
    <constant>CURLOPT_PROXY_SSLVERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une des
     <simplelist type="inline">
      <member><constant>CURL_SSLVERSION_DEFAULT</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_3</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_DEFAULT</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_3</constant></member>
      <member><constant>CURL_SSLVERSION_SSLv3</constant></member>
     </simplelist>
     .
     <warning>
      <simpara>
       Il est préférable de ne pas définir cette option et de laisser la valeur par défaut
       <constant>CURL_SSLVERSION_DEFAULT</constant>
       qui tentera de déterminer la version du protocole SSL distant.
      </simpara>
     </warning>
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-cipher-list">
   <term>
    <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La liste des suites de chiffrement à utiliser pour la connexion au proxy HTTPS.
     La liste doit être syntaxiquement correcte, elle se compose d'une ou plusieurs
     chaînes de suites de chiffrement séparées par des deux-points. Les virgules ou les espaces sont également des séparateurs acceptables
     mais les deux-points sont normalement utilisés, !, - et + peuvent être utilisés comme opérateurs.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-options">
   <term>
    <constant>CURLOPT_PROXY_SSL_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit les options de comportement SSL du proxy, qui est un masque de bits des constantes suivantes :
     <simplelist type="inline">
      <member><constant>CURLSSLOPT_ALLOW_BEAST</constant></member>
      <member><constant>CURLSSLOPT_NO_REVOKE</constant></member>
      <member><constant>CURLSSLOPT_NO_PARTIALCHAIN</constant></member>
     </simplelist>
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-verifyhost">
   <term>
    <constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur <literal>2</literal> pour vérifier dans les champs de nom du certificat du proxy
     contre le nom du proxy. Lorsqu'il est défini sur <literal>0</literal>, la connexion réussit
     indépendamment des noms utilisés dans le certificat. Utilisez cette capacité avec prudence!
     <literal>1</literal> est traité comme une option de débogage dans curl 7.28.0 et précédent.
     De curl 7.28.1 à 7.65.3 <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant> est retourné.
     À partir de curl 7.66.0, <literal>1</literal> et <literal>2</literal> sont traités comme la même valeur.
     En environnement de production, la valeur de cette option doit être maintenue à <literal>2</literal> (valeur par défaut).
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-verifypeer">
   <term>
    <constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; pour arrêter cURL de vérifier le certificat du proxy.
     Des certificats alternatifs à vérifier peuvent être
     spécifiés avec l'option <constant>CURLOPT_PROXY_CAINFO</constant>
     ou un répertoire de certificats peut être spécifié avec l'option
     <constant>CURLOPT_PROXY_CAPATH</constant>.
     Lorsque défini sur false, la vérification du certificat du proxy réussit indépendamment. &true; par défaut.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tls13-ciphers">
   <term>
    <constant>CURLOPT_PROXY_TLS13_CIPHERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La liste des suites de chiffrement à utiliser pour la connexion TLS 1.3 au proxy.
     La liste doit être syntaxiquement correcte, elle se compose d'une ou plusieurs
     chaînes de suites de chiffrement séparées par des deux-points. Cette option est actuellement utilisée
     uniquement lorsque curl est compilé pour utiliser OpenSSL 1.1.1 ou ultérieur.
     Si vous utilisez un autre backend SSL, vous pouvez essayer de définir
     les suites de chiffrement TLS 1.3 en utilisant l'option <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>. Disponible lorsque compilé avec OpenSSL &gt;= 1.1.1.
     Disponible depuis PHP 7.3.0 et cURL 7.61.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-password">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le mot de passe à utiliser pour la méthode d'authentification TLS du proxy HTTPS spécifiée avec l'option
     <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>. Nécessite également que l'option
     <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> soit définie.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-type">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La méthode d'authentification TLS utilisée pour la connexion HTTPS.
     La méthode supportée est <literal>"SRP"</literal>.
     <note>
      <para>
       L'authentification Secure Remote Password (SRP) pour TLS fournit une authentification mutuelle
       si les deux parties ont un secret partagé. Pour utiliser TLS-SRP, vous devez également définir les options
       <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> et
       <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>.
      </para>
     </note>
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-username">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom d'utilisateur à utiliser pour la méthode d'authentification TLS du proxy HTTPS spécifiée avec l'option
     <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>. Nécessite également que l'option
     <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> soit définie.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-put">
   <term>
    <constant>CURLOPT_PUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour effectuer une requête HTTP PUT d'un fichier. Le fichier à mettre
     doit être défini avec <constant>CURLOPT_INFILE</constant> et
     <constant>CURLOPT_INFILESIZE</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-quick-exit">
   <term>
    <constant>CURLOPT_QUICK_EXIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponible depuis PHP 8.3.0 et cURL 7.87.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-quote">
   <term>
    <constant>CURLOPT_QUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un tableau de commandes FTP à exécuter sur le serveur avant la
     requête FTP.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-random-file">
   <term>
    <constant>CURLOPT_RANDOM_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un nom de fichier à utiliser pour initialiser le générateur de nombres aléatoires pour SSL.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-range">
   <term>
    <constant>CURLOPT_RANGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La plage de données à récupérer au format
     <literal>"X-Y"</literal> où X ou Y sont optionnels. Les transferts HTTP
     supportent également plusieurs intervalles, séparés par des virgules au format
     <literal>"X-Y,N-M"</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-readfunction">
   <term>
    <constant>CURLOPT_READFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une fonction de rappel acceptant trois paramètres.
     Le premier est la ressource cURL, le second est
     une ressource de flux fournie à cURL via l'option
     <constant>CURLOPT_INFILE</constant>, et le troisième est la quantité
     maximale de données à lire. La fonction de rappel doit renvoyer une chaîne
     d'une longueur égale ou inférieure à la quantité de données demandée,
     typiquement en la lisant à partir de la ressource de flux passée. Elle doit
     renvoyer une chaîne vide pour signaler <literal>la fin du fichier</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-redir-protocols">
   <term>
    <constant>CURLOPT_REDIR_PROTOCOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un masque de bits de valeurs <constant>CURLPROTO_*</constant>. Si utilisé, ce masque
     limite les protocoles que libcurl peut utiliser dans un transfert qu'il suit dans une
     redirection lorsque <constant>CURLOPT_FOLLOWLOCATION</constant> est activé.
     Cela vous permet de limiter des transferts spécifiques à n'utiliser qu'un sous-ensemble
     de protocoles dans les redirections. Par défaut, libcurl acceptera tous les protocoles
     sauf FILE et SCP. C'est une différence par rapport aux versions antérieures à 7.19.4
     qui suivraient inconditionnellement tous les protocoles supportés.
     Voir aussi <constant>CURLOPT_PROTOCOLS</constant> pour les valeurs constantes de protocole.
     Disponible depuis cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-redir-protocols-str">
   <term>
    <constant>CURLOPT_REDIR_PROTOCOLS_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponible depuis PHP 8.3.0 et cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-referer">
   <term>
    <constant>CURLOPT_REFERER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le contenu de l'en-tête <literal>"Referer: "</literal> à utiliser
     dans une requête HTTP.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-request-target">
   <term>
    <constant>CURLOPT_REQUEST_TARGET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponible depuis PHP 7.3.0 et cURL 7.55.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-resolve">
   <term>
    <constant>CURLOPT_RESOLVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Apporte une adresse personnalisée pour un hôte et un port spécifiques. Un tableau
     de chaînes de nom d'hôte, de port et d'adresse IP, chaque élément séparé par
     un deux-points. Dans le format :
     <code>
      array("example.com:80:127.0.0.1")
     </code>
     Disponible depuis cURL 7.21.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-resume-from">
   <term>
    <constant>CURLOPT_RESUME_FROM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     L'offset, en octets, pour reprendre un transfert.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-returntransfer">
   <term>
    <constant>CURLOPT_RETURNTRANSFER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour retourner la réponse en tant que chaîne de la fonction
     <function>curl_exec</function> au lieu de l'afficher directement.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-safe-upload">
   <term>
    <constant>CURLOPT_SAFE_UPLOAD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Toujours &true;, ce qui désactive le support du préfixe <literal>"@"</literal>
     pour l'envoi de fichiers dans <constant>CURLOPT_POSTFIELDS</constant>, ce qui
     signifie que les valeurs commençant par <literal>"@"</literal> peuvent être
     passées en toute sécurité en tant que champs. <classname>CURLFile</classname> peut être
     utilisé pour les téléversements à la place.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sasl-authzid">
   <term>
    <constant>CURLOPT_SASL_AUTHZID</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     L'identité d'autorisation (authzid) pour le transfert. Applicable uniquement au mécanisme d'authentification SASL PLAIN
     où il est facultatif. Lorsqu'il n'est pas spécifié, seule l'identité d'authentification
     (authcid) telle que spécifiée par le nom d'utilisateur sera envoyée au serveur, avec le mot de passe.
     Le serveur déduira l'authzid de l'authcid lorsqu'il ne sera pas fourni, qu'il utilisera ensuite en interne.
     Disponible depuis PHP 8.2.0 et cURL 7.66.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sasl-ir">
   <term>
    <constant>CURLOPT_SASL_IR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour activer l'initialisation de la réponse SASL (SASL Initial Response).
     Disponible depuis PHP 7.0.7 et cURL 7.31.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-service-name">
   <term>
    <constant>CURLOPT_SERVICE_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom du service d'authentification.
     Disponible depuis PHP 7.0.7 et cURL 7.43.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-share">
   <term>
    <constant>CURLOPT_SHARE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un résultat de <function>curl_share_init</function>. Fait en sorte que le gestionnaire cURL
     utilise les données du gestionnaire partagé.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-socks5-auth">
   <term>
    <constant>CURLOPT_SOCKS5_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La méthode d'authentification SOCKS5 à utiliser. Les options sont :
     <constant>CURLAUTH_BASIC</constant>,
     <constant>CURLAUTH_GSSAPI</constant>,
     <constant>CURLAUTH_NONE</constant>.
     L'opération bit à bit <literal>|</literal> (ou) peut être utilisée pour combiner
     une ou plusieurs méthodes. Si cela est fait, cURL interrogera le serveur pour voir
     quelles méthodes il prend en charge et choisira la meilleure.
     <constant>CURLAUTH_BASIC</constant> permet l'authentification par nom d'utilisateur/mot de passe.
     <constant>CURLAUTH_GSSAPI</constant> permet l'authentification GSS-API.
     <constant>CURLAUTH_NONE</constant> n'autorise aucune authentification.
     Par défaut, <literal>CURLAUTH_BASIC|CURLAUTH_GSSAPI</literal>.
     Définissez le nom d'utilisateur et le mot de passe réels avec l'option <constant>CURLOPT_PROXYUSERPWD</constant>.
     Disponible depuis PHP 7.3.0 et cURL 7.55.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-auth-types">
   <term>
    <constant>CURLOPT_SSH_AUTH_TYPES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un masque de bits composé de l'une ou plusieurs des constantes
     <constant>CURLSSH_AUTH_PUBLICKEY</constant>,
     <constant>CURLSSH_AUTH_PASSWORD</constant>,
     <constant>CURLSSH_AUTH_HOST</constant>,
     <constant>CURLSSH_AUTH_KEYBOARD</constant>. Définissez-le sur 
     <constant>CURLSSH_AUTH_ANY</constant> pour laisser libcurl en choisir un.
     Disponible depuis cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-compression">
   <term>
    <constant>CURLOPT_SSH_COMPRESSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour activer la compression SSH intégrée. C'est une demande, pas un ordre ;
     le serveur peut ou non le faire.
     Disponible depuis PHP 7.3.0 et cURL 7.56.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-hostkeyfunction">
   <term>
    <constant>CURLOPT_SSH_HOSTKEYFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponible depuis PHP 8.3.0 et cURL 7.84.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-host-public-key-md5">
   <term>
    <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une chaîne contenant 32 chiffres hexadécimaux. La chaîne doit être le
     hachage MD5 de la clé publique de l'hôte distant, et libcurl rejettera
     la connexion à l'hôte à moins que les sommes de contrôle md5 ne correspondent.
     Cette option est uniquement pour les transferts SCP et SFTP.
     Disponible depuis cURL 7.17.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-host-public-key-sha256">
   <term>
    <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le hachage SHA256 encodé en base64 de la clé publique de l'hôte distant.
     Le transfert échouera si le hachage donné ne correspond pas au hachage fourni par l'hôte distant.
     Disponible depuis PHP 8.2.0 et cURL 7.80.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-private-keyfile">
   <term>
    <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom du fichier de votre clé privée. Si non utilisé, libcurl utilise par défaut
     $HOME/.ssh/id_dsa si la variable d'environnement HOME est définie,
     et juste "id_dsa" dans le répertoire courant si HOME n'est pas défini.
     Si le fichier est protégé par mot de passe, définissez le mot de passe avec
     <constant>CURLOPT_KEYPASSWD</constant>.
     Disponible depuis cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-public-keyfile">
   <term>
    <constant>CURLOPT_SSH_PUBLIC_KEYFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom du fichier de votre clé publique. Si non utilisé, libcurl utilise par défaut
     $HOME/.ssh/id_dsa.pub si la variable d'environnement HOME est définie,
     et juste "id_dsa.pub" dans le répertoire courant si HOME n'est pas défini.
     Disponible depuis cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcert">
   <term>
    <constant>CURLOPT_SSLCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom d'un fichier contenant un certificat au format PEM.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcertpasswd">
   <term>
    <constant>CURLOPT_SSLCERTPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le mot de passe requis pour utiliser le certificat
     <constant>CURLOPT_SSLCERT</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcerttype">
   <term>
    <constant>CURLOPT_SSLCERTTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le format du certificat. Les formats supportés sont
     <literal>"PEM"</literal> (par défaut), <literal>"DER"</literal>,
     et <literal>"ENG"</literal>.
     À partir de OpenSSL 0.9.3, <literal>"P12"</literal> (pour les fichiers encodés en PKCS#12)
     est également supporté.
     Disponible depuis cURL 7.9.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcert-blob">
   <term>
    <constant>CURLOPT_SSLCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le certificat client à partir du blob de mémoire.
     Disponible depuis PHP 8.1.0 et cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslengine">
   <term>
    <constant>CURLOPT_SSLENGINE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     L'identifiant du moteur de cryptographie de la clé SSL privée
     spécifiée dans <constant>CURLOPT_SSLKEY</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslengine-default">
   <term>
    <constant>CURLOPT_SSLENGINE_DEFAULT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     L'identifiant du moteur de cryptographie utilisé pour les opérations de
     cryptographie asymétrique.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkey">
   <term>
    <constant>CURLOPT_SSLKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom d'un fichier contenant une clé privée SSL.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkeypasswd">
   <term>
    <constant>CURLOPT_SSLKEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le mot de passe requis pour utiliser la clé privée SSL
     spécifiée dans <constant>CURLOPT_SSLKEY</constant>.
     <note>
      <para>
       Puisque cette option contient un mot de passe sensible, n'oubliez pas de garder
       le script PHP dans lequel il est contenu en sécurité.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkeytype">
   <term>
    <constant>CURLOPT_SSLKEYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le type de clé privée SSL spécifié dans
     <constant>CURLOPT_SSLKEY</constant>. Les types de clé supportés sont
     <literal>"PEM"</literal> (par défaut), <literal>"DER"</literal>,
     et <literal>"ENG"</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkey-blob">
   <term>
    <constant>CURLOPT_SSLKEY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La clé privée SSL à partir du blob de mémoire.
     Disponible depuis PHP 8.1.0 et cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslversion">
   <term>
    <constant>CURLOPT_SSLVERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une des constantes suivantes :
     <simplelist type="inline">
      <member><constant>CURL_SSLVERSION_DEFAULT</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1</constant></member>
      <member><constant>CURL_SSLVERSION_SSLv2</constant></member>
      <member><constant>CURL_SSLVERSION_SSLv3</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_3</constant></member>
     </simplelist>
     .
     Le maximum de la version TLS peut être défini en utilisant une des constantes
     <constant>CURL_SSLVERSION_MAX_<replaceable>*</replaceable></constant>.
     Il est également possible de faire un OU binaire avec une des constantes
     <constant>CURL_SSLVERSION_<replaceable>*</replaceable></constant>
     avec une des constantes
     <constant>CURL_SSLVERSION_MAX_<replaceable>*</replaceable></constant>.

     <simplelist type="inline">
      <member><constant>CURL_SSLVERSION_MAX_DEFAULT</constant> (la verison maximum supportée par la librairie)</member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_3</constant></member>
     </simplelist>
     .
     <warning>
      <simpara>
       Il est préférable de ne pas définir cette option et de laisser les valeurs par défaut.
       Définir cette option à
       <constant>CURL_SSLVERSION_SSLv2</constant>
       ou
       <constant>CURL_SSLVERSION_SSLv3</constant>
       il est très dangereux, étant donné les
       vulnérabilités connues dans SSLv2 et SSLv3.
      </simpara>
     </warning>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-cipher-list">
   <term>
    <constant>CURLOPT_SSL_CIPHER_LIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une liste de suites de chiffrement à utiliser pour SSL. Par exemple,
     <literal>RC4-SHA</literal> et <literal>TLSv1</literal> sont des listes de suites
     de chiffrement valides.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-ec-curves">
   <term>
    <constant>CURLOPT_SSL_EC_CURVES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un liste de courbes elliptiques délimitées par des deux-points. Par exemple,
     <literal>X25519:P-521</literal> est une liste de deux courbes elliptiques valides.
     Cette option définit les algorithmes d'échange de clés du client dans la poignée de main SSL,
     si le backend SSL cURL est compilé pour l'utiliser.
     Disponible depuis PHP 8.2.0 et cURL 7.73.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-enable-alpn">
   <term>
    <constant>CURLOPT_SSL_ENABLE_ALPN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; to disable ALPN in the SSL handshake (if the SSL backend
     libcurl is built to use supports it), which can be used to
     negotiate http2.
     Disponible depuis PHP 7.0.7 et cURL 7.36.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-enable-npn">
   <term>
    <constant>CURLOPT_SSL_ENABLE_NPN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; pour désactiver NPN dans la poignée de main SSL (si le backend SSL
     libcurl est compilé pour l'utiliser), ce qui peut être utilisé pour
     négocier http2.
     Disponible depuis PHP 7.0.7 et cURL 7.36.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-falsestart">
   <term>
    <constant>CURLOPT_SSL_FALSESTART</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour activer le démarrage TLS false.
     Disponible depuis PHP 7.0.7 et cURL 7.42.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-options">
   <term>
    <constant>CURLOPT_SSL_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set SSL behavior options, which is a bitmask of the following constants:
     <simplelist type="inline">
      <member><constant>CURLSSLOPT_ALLOW_BEAST</constant></member>
      <member><constant>CURLSSLOPT_NO_REVOKE</constant></member>
      <member><constant>CURLSSLOPT_AUTO_CLIENT_CERT</constant></member>
      <member><constant>CURLSSLOPT_NATIVE_CA</constant></member>
      <member><constant>CURLSSLOPT_NO_PARTIALCHAIN</constant></member>
      <member><constant>CURLSSLOPT_REVOKE_BEST_EFFORT</constant></member>
     </simplelist>
     Disponible depuis PHP 7.0.7. et cURL 7.25.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifyhost">
   <term>
    <constant>CURLOPT_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>2</literal> pour vérifier qu'un champ de nom commun ou un champ de nom alternatif
     dans le certificat SSL du pair correspond au nom d'hôte fourni.
     <literal>0</literal> pour ne pas vérifier les noms.
     <literal>1</literal> ne doit pas être utilisé.
     En production, la valeur de cette option
     doit être conservée à <literal>2</literal> (valeur par défaut). Le support de la valeur <literal>1</literal> a été supprimé dans cURL 7.28.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifypeer">
   <term>
    <constant>CURLOPT_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; pour empêcher cURL de vérifier le certificat du
     pair. Des certificats alternatifs à vérifier peuvent être
     spécifiés avec l'option <constant>CURLOPT_CAINFO</constant>
     ou un répertoire de certificats peut être spécifié avec
     l'option <constant>CURLOPT_CAPATH</constant>. &true; par défaut à partir de cURL 7.10. Bundle par défaut installé à partir de
     cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifystatus">
   <term>
    <constant>CURLOPT_SSL_VERIFYSTATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour vérifier le statut du certificat.
     Disponible depuis PHP 7.0.7 et cURL 7.41.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-stderr">
   <term>
    <constant>CURLOPT_STDERR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une location alternative pour afficher les erreurs à la place de
     <constant>STDERR</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-stream-weight">
   <term>
    <constant>CURLOPT_STREAM_WEIGHT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit le poids du flux numérique (un nombre entre 1 et 256).
     Disponible depuis PHP 7.0.7 et cURL 7.46.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-suppress-connect-headers">
   <term>
    <constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour supprimer les en-têtes de réponse proxy CONNECT des fonctions de rappel utilisateur
     <constant>CURLOPT_HEADERFUNCTION</constant> et <constant>CURLOPT_WRITEFUNCTION</constant>,
     lorsque <constant>CURLOPT_HTTPPROXYTUNNEL</constant> est utilisé et une requête CONNECT est effectuée.
     Disponible depuis PHP 7.3.0 et cURL 7.54.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-fastopen">
   <term>
    <constant>CURLOPT_TCP_FASTOPEN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour activer l'ouverture rapide TCP.
     Disponible depuis PHP 7.0.7 et cURL 7.49.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepalive">
   <term>
    <constant>CURLOPT_TCP_KEEPALIVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Si défini à <literal>1</literal>, des sondes de maintien de la connexion TCP seront envoyées. Le déliat et 
     la fréquence de ces sondes peuvent être contrôlés par les options <constant>CURLOPT_TCP_KEEPIDLE</constant>
     et <constant>CURLOPT_TCP_KEEPINTVL</constant>, à condition que le système d'exploitation
     les supporte. Si défini à <literal>0</literal> (par défaut), les sondes de maintien de la connexion sont désactivées.
     Disponible depuis cURL 7.25.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepidle">
   <term>
    <constant>CURLOPT_TCP_KEEPIDLE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Défini le délai, en secondes, que le système d'exploitation attendra pendant que la connexion est
     inutilisée avant d'envoyer des sondes de maintien de la connexion, si <constant>CURLOPT_TCP_KEEPALIVE</constant> est
     activé. Tous les systèmes d'exploitation ne supportent pas cette option.
     La valeur par défaut est <literal>60</literal>.
     Disponible depuis cURL 7.25.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepintvl">
   <term>
    <constant>CURLOPT_TCP_KEEPINTVL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit l'intervalle, en secondes, que le système d'exploitation attendra entre l'envoi
     des sondes de maintien de la connexion, si <constant>CURLOPT_TCP_KEEPALIVE</constant> est activé.
     Tous les systèmes d'exploitation ne supportent pas cette option.
     La valeur par défaut est <literal>60</literal>.
     Disponible depuis cURL 7.25.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-nodelay">
   <term>
    <constant>CURLOPT_TCP_NODELAY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour désactiver l'algorithme de Nagle TCP, qui tente de minimiser
     le nombre de petits paquets sur le réseau.
     Disponible depuis cURL 7.11.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tftp-no-options">
   <term>
    <constant>CURLOPT_TFTP_NO_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour ne pas envoyer de requêtes d'options TFTP.
     Disponible depuis PHP 7.0.7 et cURL 7.48.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timecondition">
   <term>
    <constant>CURLOPT_TIMECONDITION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Comment <constant>CURLOPT_TIMEVALUE</constant> est traité.
     Utilisez <constant>CURL_TIMECOND_IFMODSINCE</constant> pour retourner la
     page uniquement si elle a été modifiée depuis le temps spécifié dans
     <constant>CURLOPT_TIMEVALUE</constant>. Si elle n'a pas été modifiée,
     un en-tête <literal>"304 Not Modified"</literal> sera retourné
     en supposant que <constant>CURLOPT_HEADER</constant> est &true;.
     Utiliser <constant>CURL_TIMECOND_IFUNMODSINCE</constant> pour l'effet inverse.
     Utiliser <constant>CURL_TIMECOND_NONE</constant> pour ignorer
     <constant>CURLOPT_TIMEVALUE</constant> et toujours retourner la page.
     <constant>CURL_TIMECOND_NONE</constant> est la valeur par défaut. Avant cURL 7.46.0 la valeur par défaut était
     <constant>CURL_TIMECOND_IFMODSINCE</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timeout">
   <term>
    <constant>CURLOPT_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nombre maximum de secondes à attendre pour les fonctions cURL.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timeout-ms">
   <term>
    <constant>CURLOPT_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nombre maximum de millisecondes à attendre pour les fonctions cURL
     s'éxécutent.
     <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
     Si libcurl est compilé pour utiliser le résolveur de noms système standard,
     cette partie de la connexion utilisera toujours une résolution de seconde complète
     pour les délais d'attente avec un délai minimum autorisé d'une seconde.
     Disponible depuis cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timevalue">
   <term>
    <constant>CURLOPT_TIMEVALUE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le temps en secondes depuis le 1er janvier 1970. Le temps sera utilisé
     par <constant>CURLOPT_TIMECONDITION</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timevalue-large">
   <term>
    <constant>CURLOPT_TIMEVALUE_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le temps en secondes depuis le 1er janvier 1970. Le temps sera utilisé
     par <constant>CURLOPT_TIMECONDITION</constant>. Par défaut à zéro.
     La différence entre cette option et <constant>CURLOPT_TIMEVALUE</constant>
     est le type de l'argument. Sur les systèmes où 'long' n'est que de 32 bits de large,
     cette option doit être utilisée pour définir des dates au-delà de l'année 2038.
     Disponible depuis PHP 7.3.0 et cURL 7.59.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tls13-ciphers">
   <term>
    <constant>CURLOPT_TLS13_CIPHERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La liste des suites de chiffrement à utiliser pour la connexion TLS 1.3. La liste doit être
     syntaxiquement correcte, elle se compose d'une ou plusieurs chaînes de suites de chiffrement séparées par des deux-points.
     Cette option est actuellement utilisée uniquement lorsque cURL est compilé pour utiliser OpenSSL 1.1.1 ou ultérieur.
     Si vous utilisez un autre backend SSL, vous pouvez essayer de définir
     les suites de chiffrement TLS 1.3 en utilisant l'option <constant>CURLOPT_SSL_CIPHER_LIST</constant>. Disponible lorsque compilé avec OpenSSL &gt;= 1.1.1.
     Disponible depuis PHP 7.3.0 et cURL 7.61.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-transfertext">
   <term>
    <constant>CURLOPT_TRANSFERTEXT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; to use ASCII mode for FTP transfers.
     Pour LDAP, il récupère les données en texte brut au lieu de HTML. Sur
     les systèmes Windows, il ne définira pas <constant>STDOUT</constant> en
     mode binaire.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-unix-socket-path">
   <term>
    <constant>CURLOPT_UNIX_SOCKET_PATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Active l'utilisation des sockets de domaine Unix comme point de connexion et
     définit le chemin du <type>string</type> donné.
     Disponible depuis PHP 7.0.7 et cURL 7.40.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-unrestricted-auth">
   <term>
    <constant>CURLOPT_UNRESTRICTED_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour continuer à envoyer le nom d'utilisateur et le mot de passe
     lors du suivi des emplacements (en utilisant
     <constant>CURLOPT_FOLLOWLOCATION</constant>), même lorsque le
     nom d'hôte a changé.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upkeep-interval-ms">
   <term>
    <constant>CURLOPT_UPKEEP_INTERVAL_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Quelques protocoles ont des mécanismes de "maintenance de la connexion". Ces mécanismes envoient
     généralement du trafic sur les connexions existantes pour les maintenir en vie. Cette option définit l'intervalle de maintenance de la connexion.
     Actuellement, le seul protocole avec un mécanisme de maintenance de la connexion est HTTP/2. Lorsque l'intervalle de maintenance de la
     connexion est dépassé, un cadre PING HTTP/2 est envoyé sur la connexion.
     La valeur par défaut est <literal>60</literal> secondes.
     Disponible depuis PHP 8.2.0 et cURL 7.62.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upload">
   <term>
    <constant>CURLOPT_UPLOAD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; to prepare for an upload.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upload-buffersize">
   <term>
    <constant>CURLOPT_UPLOAD_BUFFERSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le tampon de taille préférée en octets pour le téléchargement cURL.
     La taille du tampon de téléchargement par défaut est de 64 kilo-octets. La taille maximale du tampon autorisée à être définie est de 2 méga-octets.
     La taille minimale du tampon autorisée à être définie est de 16 kilo-octets.
     Disponible depuis PHP 8.2.0 et cURL 7.62.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-url">
   <term>
    <constant>CURLOPT_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     L'URL à récupérer. Cela peut également être défini lors de l'initialisation d'une
     session avec <function>curl_init</function>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-useragent">
   <term>
    <constant>CURLOPT_USERAGENT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le contenu de l'en-tête <literal>"User-Agent: "</literal> à utiliser dans une
     requête HTTP.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-username">
   <term>
    <constant>CURLOPT_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom d'utilisateur à utiliser dans l'authentification.
     Disponible depuis cURL 7.19.1
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-userpwd">
   <term>
    <constant>CURLOPT_USERPWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom d'utilisateur et le mot de passe sous la forme
     <literal>"[username]:[password]"</literal> à utiliser
     pour la connexion.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-verbose">
   <term>
    <constant>CURLOPT_VERBOSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour afficher des informations détaillées sur la connexion.
     Écrit la sortie sur <constant>STDERR</constant>, ou le fichier spécifié en utilisant
     <constant>CURLOPT_STDERR</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-writefunction">
   <term>
    <constant>CURLOPT_WRITEFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une fonction de rappel acceptant deux paramètres.
     Le premier est le gestionnaire cURL, et le second est
     une chaîne contenant les données à écrire. Les données doivent être enregistrées par
     ce rappel. Il doit retourner le nombre exact d'octets écrits
     ou le transfert sera interrompu avec une erreur.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-writeheader">
   <term>
    <constant>CURLOPT_WRITEHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le fichier où la partie en-tête du transfert est écrite.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ws-options">
   <term>
    <constant>CURLOPT_WS_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponible depuis PHP 8.3.0 et cURL 7.86.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-xferinfofunction">
   <term>
    <constant>CURLOPT_XFERINFOFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une fonction de rappel acceptant deux paramètres.
     A une fonction similaire à <constant>CURLOPT_PROGRESSFUNCTION</constant> mais est plus moderne
     et l'option préférée de cURL.
     Disponible depuis PHP 8.2.0 et cURL 7.32.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-xoauth2-bearer">
   <term>
    <constant>CURLOPT_XOAUTH2_BEARER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Spécife le jeton d'accès OAuth 2.0.
     Disponible depuis PHP 7.0.7 et cURL 7.33.0
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
