<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 141b05e576781405f9077abbe89e7a8b2a5eb946 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<variablelist xml:id="constant.curl-multi-setopt.constants" role="constant_list">
 <title><function>curl_multi_setopt</function></title>
  <varlistentry xml:id="constant.curlmopt-chunk-length-penalty-size">
   <term>
    <constant>CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie le seuil de longueur de morceau pour le pipelining en octets.
     Disponible à partir de PHP 7.0.7 et cURL 7.30.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlmopt-content-length-penalty-size">
   <term>
    <constant>CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie le seuil de taille de pénalité de pipelining en octets.
     Disponible à partir de PHP 7.0.7 et cURL 7.30.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlmopt-maxconnects">
   <term>
    <constant>CURLMOPT_MAXCONNECTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie la quantité maximale de connexions simultanément ouvertes
     que libcurl peut mettre en cache.
     Par défaut, la taille sera agrandie pour contenir quatre fois le nombre
     de gestionnaires ajoutées via <function>curl_multi_add_handle</function>.
     Lorsque le cache est plein, cURL ferme la plus ancienne dans le cache
     pour empêcher le nombre de connexions ouvertes d'augmenter.
     Disponible à partir de cURL 7.16.3.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlmopt-max-concurrent-streams">
   <term>
    <constant>CURLMOPT_MAX_CONCURRENT_STREAMS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie le nombre maximal de stream simultanés pour les connexions
     que cURL devrait supporter sur les connexions utilisant HTTP/2.
     Les valeurs valides vont de <literal>1</literal>
     à <literal>2147483647</literal> (<literal>2^31 - 1</literal>).
     La valeur passée ici serait honorée
     en fonction d'autres propriétés des ressources système.
     Par défaut, c'est <literal>100</literal>.
     Disponible à partir de PHP 8.2.0 et cURL 7.67.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlmopt-max-host-connections">
   <term>
    <constant>CURLMOPT_MAX_HOST_CONNECTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie le nombre maximal de connexions à un seul hôte.
     Disponible à partir de PHP 7.0.7 et cURL 7.30.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlmopt-max-pipeline-length">
   <term>
    <constant>CURLMOPT_MAX_PIPELINE_LENGTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie le nombre maximal de requêtes dans un pipeline.
     Disponible à partir de PHP 7.0.7 et cURL 7.30.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlmopt-max-total-connections">
   <term>
    <constant>CURLMOPT_MAX_TOTAL_CONNECTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie le nombre maximal de connexions simultanément ouvertes.
     Disponible à partir de PHP 7.0.7 et cURL 7.30.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlmopt-pipelining">
   <term>
    <constant>CURLMOPT_PIPELINING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Passer 1 pour activer ou 0 pour désactiver. Activer le pipelining sur un gestionnaire multiple
     fera qu'elle tentera de réaliser le pipelining HTTP autant que possible
     pour les transferts utilisant ce gestionnaire. Cela signifie qu'ajouter
     une deuxième requête qui peut utiliser une connexion déjà existante
     "pipe" la deuxième requête sur la même connexion.
     A partir de cURL 7.43.0, la valeur est un masque de bits,
     et passer 2 tentera de multiplexer le nouveau
     transfert sur une connexion HTTP/2 existante.
     Passer 3 indique à cURL de demander le pipelining et le multiplexage
     indépendamment l'un de l'autre.
     A partir de cURL 7.62.0, définir le bit de pipelining n'a aucun effet.
     Au lieu de littéraux entiers, les constantes CURLPIPE_* peuvent également être utilisées.
     Disponible à partir de cURL 7.16.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlmopt-pushfunction">
   <term>
    <constant>CURLMOPT_PUSHFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passer une <type>fermeture</type> qui sera enregistré pour gérer les poussées du serveur
     et doit avoir la signature suivante:
     <methodsynopsis>
      <type>int</type><methodname><replaceable>pushfunction</replaceable></methodname>
      <methodparam><type>resource</type><parameter>parent_ch</parameter></methodparam>
      <methodparam><type>resource</type><parameter>pushed_ch</parameter></methodparam>
      <methodparam><type>array</type><parameter>headers</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>parent_ch</parameter></term>
       <listitem>
        <simpara>
         Le gestionnaire parent cURL (la requête que le client a faite).
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>pushed_ch</parameter></term>
       <listitem>
        <simpara>
         Un nouveau gestionnaire cURL pour la requête poussée. 
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>headers</parameter></term>
       <listitem>
        <simpara>
         Les en-têtes de la promesse de poussée.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     La fonction push doit retourner soit
     <constant>CURL_PUSH_OK</constant> si elle peut gérer la poussée, ou
     <constant>CURL_PUSH_DENY</constant> pour la rejeter.
     Disponible à partir de PHP 7.1.0 et cURL 7.44.0
    </para>
   </listitem>
  </varlistentry>
</variablelist>
