<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: bbfa9738785f054752e6cb565cd0a58e71015bc6 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<book xml:id="book.componere" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <?phpdoc extension-membership="pecl" ?>
 <title>Componere</title>
 <titleabbrev>Componere</titleabbrev>

 <preface xml:id="intro.componere">
  &reftitle.intro;
  <para>
   Componere (latin, englais: compose) cible les environnements de production et fournit une API pour
   la composition de classes, le patching et la conversion de type.
  </para>
   <formalpara>
    <title>Composition:</title>
    <para>
     <classname>Componere\Definition</classname> est utilisée pour définir (ou redéfinir) une classe à l'exécution;
     La classe peut ensuite être enregistrée, et dans le cas d'une redéfinition, elle remplace la classe d'origine
     tant que <classname>Componere\Definition</classname> existe.
     <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.componere-definition')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])" />
    </para>
   </formalpara>

   <formalpara>
    <title>Patching:</title>
    <para>
     <classname>Componere\Patch</classname> est utilisée pour changer la classe d'une instance spécifique d'un objet à l'exécution;
     Le patch reste appliqué tant que <classname>Componere\Patch</classname> existe, et peut être révoqué explicitement.
     <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.componere-patch')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])" />
    </para>
  </formalpara>

  <formalpara>
    <title>Conversion de type:</title>
    <para>
     Les fonctions de conversion de type <classname>Componere\</classname> peuvent effectuer des conversions parmi les types compatibles définis par l'utilisateur;
     Où compatible signifie que <classname>Type</classname> est sous ou sur le type de <parameter>object</parameter>.
     <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('componere.cast')/db:refsect1[@role='description']/descendant::db:methodsynopsis)" />
     <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('componere.cast_by_ref')/db:refsect1[@role='description']/descendant::db:methodsynopsis)" />
    </para>
  </formalpara>

 </preface>

 &reference.componere.setup;
 &reference.componere.componere.abstract.definition;
 &reference.componere.componere.definition;
 &reference.componere.componere.patch;
 &reference.componere.componere.method;
 &reference.componere.componere.value;
 &reference.componere.reference;
</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
