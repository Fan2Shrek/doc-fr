<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 826073522514072830b63bee2b6135dc675ea45d Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="random-randomizer.pickarraykeys" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Random\Randomizer::pickArrayKeys</refname>
  <refpurpose>Sélectionne des clés de tableau aléatoires</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Random\\Randomizer">
   <modifier>public</modifier> <type>array</type><methodname>Random\Randomizer::pickArrayKeys</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam><type>int</type><parameter>num</parameter></methodparam>
  </methodsynopsis>
  <para>
   Sélectionne de manière uniforme <parameter>num</parameter> clés de tableau distinctes de l'<parameter>array</parameter> d'entrée.
  </para>
  <para>
   Chaque clé de l'<parameter>array</parameter> d'entrée a la même chance d'être retournée.
  </para>
  <caution>
   <para>
    La sélection des clés de tableau dépend de la structure interne de
    l'<parameter>array</parameter> d'entrée. Les clés de tableau retournées peuvent être différentes pour
    deux tableaux d'entrée égaux et deux <classname>Random\Engine</classname>s avec
    un état identique, en fonction de la manière dont les tableaux d'entrée ont été créés.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>array</parameter></term>
    <listitem>
     <para>
      Le tableau dont les clés de tableau sont sélectionnées.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>num</parameter></term>
    <listitem>
     <para>
      Le nombre de clés de tableau à retourner; doit être compris entre <literal>1</literal>
      et le nombre d'éléments dans <parameter>array</parameter>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un &array; contenant <parameter>num</parameter> clés de tableau distinctes de <parameter>array</parameter>.
  </para>
  <para>
   Le &array; retourné sera une liste (<function>array_is_list</function>). Ce sera un sous-ensemble
   du &array; retourné par <function>array_keys</function>.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <itemizedlist>
   <listitem>
    <simpara>
     Si <parameter>num</parameter> est inférieur à <literal>1</literal> ou
     supérieur au nombre d'éléments dans <parameter>array</parameter>, une
     <classname>ValueError</classname> sera lancée.
    </simpara>
   </listitem>
   &random.engineErrors;
  </itemizedlist>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple de <function>Random\Randomizer::pickArrayKeys</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$r = new \Random\Randomizer();

$fruits = [ 'red' => '🍎', 'green' => '🥝', 'yellow' => '🍌', 'pink' => '🍑', 'purple' => '🍇' ];

// Prend 2 clés de tableau aléatoires:
echo "Keys: ", implode(', ', $r->pickArrayKeys($fruits, 2)), "\n";

// Prend 3 autres clés:
echo "Keys: ", implode(', ', $r->pickArrayKeys($fruits, 3)), "\n";
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
Keys: yellow, purple
Keys: red, green, yellow
]]>
   </screen>
  </example>
  <example>
   <title>Prendre des valeurs aléatoire</title>
   <programlisting role="php">
<![CDATA[
<?php
$r = new \Random\Randomizer();

$fruits = [ 'red' => '🍎', 'green' => '🥝', 'yellow' => '🍌', 'pink' => '🍑', 'purple' => '🍇' ];

$keys = $r->pickArrayKeys($fruits, 2);
// Regarder les valeurs pour les clés sélectionnées.
$selection = array_map(
    static fn ($key) => $fruits[$key],
    $keys
);

echo "Values: ", implode(', ', $selection), "\n";
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
Values: 🍎, 🍇
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>array_keys</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
